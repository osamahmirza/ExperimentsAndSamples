#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MarketAnalyzer")]
	public partial class CurrenciesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblError(tblError instance);
    partial void UpdatetblError(tblError instance);
    partial void DeletetblError(tblError instance);
    partial void InserttblGlobalMarketView(tblGlobalMarketView instance);
    partial void UpdatetblGlobalMarketView(tblGlobalMarketView instance);
    partial void DeletetblGlobalMarketView(tblGlobalMarketView instance);
    partial void InserttblCurrencyMarketView(tblCurrencyMarketView instance);
    partial void UpdatetblCurrencyMarketView(tblCurrencyMarketView instance);
    partial void DeletetblCurrencyMarketView(tblCurrencyMarketView instance);
    partial void InserttblCurrencyTransactionLog(tblCurrencyTransactionLog instance);
    partial void UpdatetblCurrencyTransactionLog(tblCurrencyTransactionLog instance);
    partial void DeletetblCurrencyTransactionLog(tblCurrencyTransactionLog instance);
    partial void InserttblCurrencyRankChanged(tblCurrencyRankChanged instance);
    partial void UpdatetblCurrencyRankChanged(tblCurrencyRankChanged instance);
    partial void DeletetblCurrencyRankChanged(tblCurrencyRankChanged instance);
    partial void InserttblCurrencyView(tblCurrencyView instance);
    partial void UpdatetblCurrencyView(tblCurrencyView instance);
    partial void DeletetblCurrencyView(tblCurrencyView instance);
    #endregion
		
		public CurrenciesDataContext() : 
				base(global::Data.Properties.Settings.Default.MarketAnalyzerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public CurrenciesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrenciesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrenciesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CurrenciesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblError> tblErrors
		{
			get
			{
				return this.GetTable<tblError>();
			}
		}
		
		public System.Data.Linq.Table<tblGlobalMarketView> tblGlobalMarketViews
		{
			get
			{
				return this.GetTable<tblGlobalMarketView>();
			}
		}
		
		public System.Data.Linq.Table<tblCurrencyMarketView> tblCurrencyMarketViews
		{
			get
			{
				return this.GetTable<tblCurrencyMarketView>();
			}
		}
		
		public System.Data.Linq.Table<tblCurrencyTransactionLog> tblCurrencyTransactionLogs
		{
			get
			{
				return this.GetTable<tblCurrencyTransactionLog>();
			}
		}

        public System.Data.Linq.Table<tblCurrencyRankChanged> tblCurrencyRankChangeds
		{
			get
			{
				return this.GetTable<tblCurrencyRankChanged>();
			}
		}
		
		public System.Data.Linq.Table<tblCurrencyView> tblCurrencyViews
		{
			get
			{
				return this.GetTable<tblCurrencyView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblError")]
	public partial class tblError : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Message;
		
		private string _StackTrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public tblError()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(2048) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGlobalMarketView")]
	public partial class tblGlobalMarketView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private System.Nullable<decimal> _TotalMarketCapUSD;
		
		private System.Nullable<decimal> _Total24HVolumeUSD;
		
		private System.Nullable<double> _BTCPercentageofMarketCap;
		
		private System.Nullable<int> _ActiveCurrencies;
		
		private System.Nullable<int> _ActiveAssets;
		
		private System.Nullable<int> _ActiveMarkets;
		
		private string _LastUpdated;
		
		private System.Nullable<decimal> _TotalMarketCapConvertCurrency;
		
		private System.Nullable<decimal> _Total24HVolumeConvertCurrency;
		
		private System.DateTime _TimeStamp;
		
		private int _TransactionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnTotalMarketCapUSDChanging(System.Nullable<decimal> value);
    partial void OnTotalMarketCapUSDChanged();
    partial void OnTotal24HVolumeUSDChanging(System.Nullable<decimal> value);
    partial void OnTotal24HVolumeUSDChanged();
    partial void OnBTCPercentageofMarketCapChanging(System.Nullable<double> value);
    partial void OnBTCPercentageofMarketCapChanged();
    partial void OnActiveCurrenciesChanging(System.Nullable<int> value);
    partial void OnActiveCurrenciesChanged();
    partial void OnActiveAssetsChanging(System.Nullable<int> value);
    partial void OnActiveAssetsChanged();
    partial void OnActiveMarketsChanging(System.Nullable<int> value);
    partial void OnActiveMarketsChanged();
    partial void OnLastUpdatedChanging(string value);
    partial void OnLastUpdatedChanged();
    partial void OnTotalMarketCapConvertCurrencyChanging(System.Nullable<decimal> value);
    partial void OnTotalMarketCapConvertCurrencyChanged();
    partial void OnTotal24HVolumeConvertCurrencyChanging(System.Nullable<decimal> value);
    partial void OnTotal24HVolumeConvertCurrencyChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    #endregion
		
		public tblGlobalMarketView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMarketCapUSD", DbType="Decimal(25,8)")]
		public System.Nullable<decimal> TotalMarketCapUSD
		{
			get
			{
				return this._TotalMarketCapUSD;
			}
			set
			{
				if ((this._TotalMarketCapUSD != value))
				{
					this.OnTotalMarketCapUSDChanging(value);
					this.SendPropertyChanging();
					this._TotalMarketCapUSD = value;
					this.SendPropertyChanged("TotalMarketCapUSD");
					this.OnTotalMarketCapUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total24HVolumeUSD", DbType="Decimal(25,8)")]
		public System.Nullable<decimal> Total24HVolumeUSD
		{
			get
			{
				return this._Total24HVolumeUSD;
			}
			set
			{
				if ((this._Total24HVolumeUSD != value))
				{
					this.OnTotal24HVolumeUSDChanging(value);
					this.SendPropertyChanging();
					this._Total24HVolumeUSD = value;
					this.SendPropertyChanged("Total24HVolumeUSD");
					this.OnTotal24HVolumeUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BTCPercentageofMarketCap", DbType="Float")]
		public System.Nullable<double> BTCPercentageofMarketCap
		{
			get
			{
				return this._BTCPercentageofMarketCap;
			}
			set
			{
				if ((this._BTCPercentageofMarketCap != value))
				{
					this.OnBTCPercentageofMarketCapChanging(value);
					this.SendPropertyChanging();
					this._BTCPercentageofMarketCap = value;
					this.SendPropertyChanged("BTCPercentageofMarketCap");
					this.OnBTCPercentageofMarketCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveCurrencies", DbType="Int")]
		public System.Nullable<int> ActiveCurrencies
		{
			get
			{
				return this._ActiveCurrencies;
			}
			set
			{
				if ((this._ActiveCurrencies != value))
				{
					this.OnActiveCurrenciesChanging(value);
					this.SendPropertyChanging();
					this._ActiveCurrencies = value;
					this.SendPropertyChanged("ActiveCurrencies");
					this.OnActiveCurrenciesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveAssets", DbType="Int")]
		public System.Nullable<int> ActiveAssets
		{
			get
			{
				return this._ActiveAssets;
			}
			set
			{
				if ((this._ActiveAssets != value))
				{
					this.OnActiveAssetsChanging(value);
					this.SendPropertyChanging();
					this._ActiveAssets = value;
					this.SendPropertyChanged("ActiveAssets");
					this.OnActiveAssetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActiveMarkets", DbType="Int")]
		public System.Nullable<int> ActiveMarkets
		{
			get
			{
				return this._ActiveMarkets;
			}
			set
			{
				if ((this._ActiveMarkets != value))
				{
					this.OnActiveMarketsChanging(value);
					this.SendPropertyChanging();
					this._ActiveMarkets = value;
					this.SendPropertyChanged("ActiveMarkets");
					this.OnActiveMarketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="VarChar(50)")]
		public string LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalMarketCapConvertCurrency", DbType="Decimal(25,8)")]
		public System.Nullable<decimal> TotalMarketCapConvertCurrency
		{
			get
			{
				return this._TotalMarketCapConvertCurrency;
			}
			set
			{
				if ((this._TotalMarketCapConvertCurrency != value))
				{
					this.OnTotalMarketCapConvertCurrencyChanging(value);
					this.SendPropertyChanging();
					this._TotalMarketCapConvertCurrency = value;
					this.SendPropertyChanged("TotalMarketCapConvertCurrency");
					this.OnTotalMarketCapConvertCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total24HVolumeConvertCurrency", DbType="Decimal(25,8)")]
		public System.Nullable<decimal> Total24HVolumeConvertCurrency
		{
			get
			{
				return this._Total24HVolumeConvertCurrency;
			}
			set
			{
				if ((this._Total24HVolumeConvertCurrency != value))
				{
					this.OnTotal24HVolumeConvertCurrencyChanging(value);
					this.SendPropertyChanging();
					this._Total24HVolumeConvertCurrency = value;
					this.SendPropertyChanged("Total24HVolumeConvertCurrency");
					this.OnTotal24HVolumeConvertCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrencyMarketView")]
	public partial class tblCurrencyMarketView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID;
		
		private string _CoinMarkCapID;
		
		private string _Name;
		
		private string _Symbol;
		
		private System.Nullable<int> _Rank;
		
		private System.Nullable<decimal> _PriceUSD;
		
		private System.Nullable<decimal> _PriceBTC;
		
		private System.Nullable<decimal> _Volume24hUSD;
		
		private System.Nullable<decimal> _MarketCapUSD;
		
		private System.Nullable<decimal> _AvailableSupply;
		
		private System.Nullable<decimal> _TotalSupply;
		
		private System.Nullable<double> _PercentageChange1H;
		
		private System.Nullable<double> _PercentageChange24H;
		
		private System.Nullable<double> _PercentageChange7D;
		
		private string _LastUpdatedUTC;
		
		private System.Nullable<decimal> _PriceConvert;
		
		private System.Nullable<decimal> _Volumne24HConvert;
		
		private System.Nullable<decimal> _MarketCapConvert;
		
		private System.DateTime _TimeStamp;
		
		private int _TransactionID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnCoinMarkCapIDChanging(string value);
    partial void OnCoinMarkCapIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnPriceUSDChanging(System.Nullable<decimal> value);
    partial void OnPriceUSDChanged();
    partial void OnPriceBTCChanging(System.Nullable<decimal> value);
    partial void OnPriceBTCChanged();
    partial void OnVolume24hUSDChanging(System.Nullable<decimal> value);
    partial void OnVolume24hUSDChanged();
    partial void OnMarketCapUSDChanging(System.Nullable<decimal> value);
    partial void OnMarketCapUSDChanged();
    partial void OnAvailableSupplyChanging(System.Nullable<decimal> value);
    partial void OnAvailableSupplyChanged();
    partial void OnTotalSupplyChanging(System.Nullable<decimal> value);
    partial void OnTotalSupplyChanged();
    partial void OnPercentageChange1HChanging(System.Nullable<double> value);
    partial void OnPercentageChange1HChanged();
    partial void OnPercentageChange24HChanging(System.Nullable<double> value);
    partial void OnPercentageChange24HChanged();
    partial void OnPercentageChange7DChanging(System.Nullable<double> value);
    partial void OnPercentageChange7DChanged();
    partial void OnLastUpdatedUTCChanging(string value);
    partial void OnLastUpdatedUTCChanged();
    partial void OnPriceConvertChanging(System.Nullable<decimal> value);
    partial void OnPriceConvertChanged();
    partial void OnVolumne24HConvertChanging(System.Nullable<decimal> value);
    partial void OnVolumne24HConvertChanged();
    partial void OnMarketCapConvertChanging(System.Nullable<decimal> value);
    partial void OnMarketCapConvertChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    #endregion
		
		public tblCurrencyMarketView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoinMarkCapID", DbType="VarChar(256)")]
		public string CoinMarkCapID
		{
			get
			{
				return this._CoinMarkCapID;
			}
			set
			{
				if ((this._CoinMarkCapID != value))
				{
					this.OnCoinMarkCapIDChanging(value);
					this.SendPropertyChanging();
					this._CoinMarkCapID = value;
					this.SendPropertyChanged("CoinMarkCapID");
					this.OnCoinMarkCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(128)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> PriceUSD
		{
			get
			{
				return this._PriceUSD;
			}
			set
			{
				if ((this._PriceUSD != value))
				{
					this.OnPriceUSDChanging(value);
					this.SendPropertyChanging();
					this._PriceUSD = value;
					this.SendPropertyChanged("PriceUSD");
					this.OnPriceUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBTC", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> PriceBTC
		{
			get
			{
				return this._PriceBTC;
			}
			set
			{
				if ((this._PriceBTC != value))
				{
					this.OnPriceBTCChanging(value);
					this.SendPropertyChanging();
					this._PriceBTC = value;
					this.SendPropertyChanged("PriceBTC");
					this.OnPriceBTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume24hUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> Volume24hUSD
		{
			get
			{
				return this._Volume24hUSD;
			}
			set
			{
				if ((this._Volume24hUSD != value))
				{
					this.OnVolume24hUSDChanging(value);
					this.SendPropertyChanging();
					this._Volume24hUSD = value;
					this.SendPropertyChanged("Volume24hUSD");
					this.OnVolume24hUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketCapUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> MarketCapUSD
		{
			get
			{
				return this._MarketCapUSD;
			}
			set
			{
				if ((this._MarketCapUSD != value))
				{
					this.OnMarketCapUSDChanging(value);
					this.SendPropertyChanging();
					this._MarketCapUSD = value;
					this.SendPropertyChanged("MarketCapUSD");
					this.OnMarketCapUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSupply", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> AvailableSupply
		{
			get
			{
				return this._AvailableSupply;
			}
			set
			{
				if ((this._AvailableSupply != value))
				{
					this.OnAvailableSupplyChanging(value);
					this.SendPropertyChanging();
					this._AvailableSupply = value;
					this.SendPropertyChanged("AvailableSupply");
					this.OnAvailableSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSupply", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> TotalSupply
		{
			get
			{
				return this._TotalSupply;
			}
			set
			{
				if ((this._TotalSupply != value))
				{
					this.OnTotalSupplyChanging(value);
					this.SendPropertyChanging();
					this._TotalSupply = value;
					this.SendPropertyChanged("TotalSupply");
					this.OnTotalSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange1H", DbType="Float")]
		public System.Nullable<double> PercentageChange1H
		{
			get
			{
				return this._PercentageChange1H;
			}
			set
			{
				if ((this._PercentageChange1H != value))
				{
					this.OnPercentageChange1HChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange1H = value;
					this.SendPropertyChanged("PercentageChange1H");
					this.OnPercentageChange1HChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange24H", DbType="Float")]
		public System.Nullable<double> PercentageChange24H
		{
			get
			{
				return this._PercentageChange24H;
			}
			set
			{
				if ((this._PercentageChange24H != value))
				{
					this.OnPercentageChange24HChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange24H = value;
					this.SendPropertyChanged("PercentageChange24H");
					this.OnPercentageChange24HChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange7D", DbType="Float")]
		public System.Nullable<double> PercentageChange7D
		{
			get
			{
				return this._PercentageChange7D;
			}
			set
			{
				if ((this._PercentageChange7D != value))
				{
					this.OnPercentageChange7DChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange7D = value;
					this.SendPropertyChanged("PercentageChange7D");
					this.OnPercentageChange7DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedUTC", DbType="VarChar(50)")]
		public string LastUpdatedUTC
		{
			get
			{
				return this._LastUpdatedUTC;
			}
			set
			{
				if ((this._LastUpdatedUTC != value))
				{
					this.OnLastUpdatedUTCChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedUTC = value;
					this.SendPropertyChanged("LastUpdatedUTC");
					this.OnLastUpdatedUTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceConvert", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> PriceConvert
		{
			get
			{
				return this._PriceConvert;
			}
			set
			{
				if ((this._PriceConvert != value))
				{
					this.OnPriceConvertChanging(value);
					this.SendPropertyChanging();
					this._PriceConvert = value;
					this.SendPropertyChanged("PriceConvert");
					this.OnPriceConvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volumne24HConvert", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> Volumne24HConvert
		{
			get
			{
				return this._Volumne24HConvert;
			}
			set
			{
				if ((this._Volumne24HConvert != value))
				{
					this.OnVolumne24HConvertChanging(value);
					this.SendPropertyChanging();
					this._Volumne24HConvert = value;
					this.SendPropertyChanged("Volumne24HConvert");
					this.OnVolumne24HConvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketCapConvert", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> MarketCapConvert
		{
			get
			{
				return this._MarketCapConvert;
			}
			set
			{
				if ((this._MarketCapConvert != value))
				{
					this.OnMarketCapConvertChanging(value);
					this.SendPropertyChanging();
					this._MarketCapConvert = value;
					this.SendPropertyChanged("MarketCapConvert");
					this.OnMarketCapConvertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrencyTransactionLog")]
	public partial class tblCurrencyTransactionLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TransactionID;
		
		private bool _IsSuccessfull;
		
		private System.DateTime _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnIsSuccessfullChanging(bool value);
    partial void OnIsSuccessfullChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblCurrencyTransactionLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuccessfull", DbType="Bit NOT NULL")]
		public bool IsSuccessfull
		{
			get
			{
				return this._IsSuccessfull;
			}
			set
			{
				if ((this._IsSuccessfull != value))
				{
					this.OnIsSuccessfullChanging(value);
					this.SendPropertyChanging();
					this._IsSuccessfull = value;
					this.SendPropertyChanged("IsSuccessfull");
					this.OnIsSuccessfullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrencyRankChanged")]
	public partial class tblCurrencyRankChanged : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CoinMarkCapID;
		
		private int _TransactionID;
		
		private System.Nullable<int> _OldRank;
		
		private System.Nullable<int> _NewRank;
		
		private System.Nullable<decimal> _OldCapUSD;
		
		private System.Nullable<decimal> _NewCapUSD;
		
		private bool _IsRankUp;
		
		private System.Nullable<bool> _IsCapUp;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCoinMarkCapIDChanging(string value);
    partial void OnCoinMarkCapIDChanged();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnOldRankChanging(System.Nullable<int> value);
    partial void OnOldRankChanged();
    partial void OnNewRankChanging(System.Nullable<int> value);
    partial void OnNewRankChanged();
    partial void OnOldCapUSDChanging(System.Nullable<decimal> value);
    partial void OnOldCapUSDChanged();
    partial void OnNewCapUSDChanging(System.Nullable<decimal> value);
    partial void OnNewCapUSDChanged();
    partial void OnIsRankUpChanging(bool value);
    partial void OnIsRankUpChanged();
    partial void OnIsCapUpChanging(System.Nullable<bool> value);
    partial void OnIsCapUpChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblCurrencyRankChanged()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoinMarkCapID", DbType="VarChar(128) NOT NULL", CanBeNull=false)]
		public string CoinMarkCapID
		{
			get
			{
				return this._CoinMarkCapID;
			}
			set
			{
				if ((this._CoinMarkCapID != value))
				{
					this.OnCoinMarkCapIDChanging(value);
					this.SendPropertyChanging();
					this._CoinMarkCapID = value;
					this.SendPropertyChanged("CoinMarkCapID");
					this.OnCoinMarkCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int NOT NULL")]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldRank", DbType="Int")]
		public System.Nullable<int> OldRank
		{
			get
			{
				return this._OldRank;
			}
			set
			{
				if ((this._OldRank != value))
				{
					this.OnOldRankChanging(value);
					this.SendPropertyChanging();
					this._OldRank = value;
					this.SendPropertyChanged("OldRank");
					this.OnOldRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewRank", DbType="Int")]
		public System.Nullable<int> NewRank
		{
			get
			{
				return this._NewRank;
			}
			set
			{
				if ((this._NewRank != value))
				{
					this.OnNewRankChanging(value);
					this.SendPropertyChanging();
					this._NewRank = value;
					this.SendPropertyChanged("NewRank");
					this.OnNewRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldCapUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> OldCapUSD
		{
			get
			{
				return this._OldCapUSD;
			}
			set
			{
				if ((this._OldCapUSD != value))
				{
					this.OnOldCapUSDChanging(value);
					this.SendPropertyChanging();
					this._OldCapUSD = value;
					this.SendPropertyChanged("OldCapUSD");
					this.OnOldCapUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewCapUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> NewCapUSD
		{
			get
			{
				return this._NewCapUSD;
			}
			set
			{
				if ((this._NewCapUSD != value))
				{
					this.OnNewCapUSDChanging(value);
					this.SendPropertyChanging();
					this._NewCapUSD = value;
					this.SendPropertyChanged("NewCapUSD");
					this.OnNewCapUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRankUp", DbType="Bit NOT NULL")]
		public bool IsRankUp
		{
			get
			{
				return this._IsRankUp;
			}
			set
			{
				if ((this._IsRankUp != value))
				{
					this.OnIsRankUpChanging(value);
					this.SendPropertyChanging();
					this._IsRankUp = value;
					this.SendPropertyChanged("IsRankUp");
					this.OnIsRankUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCapUp", DbType="Bit")]
		public System.Nullable<bool> IsCapUp
		{
			get
			{
				return this._IsCapUp;
			}
			set
			{
				if ((this._IsCapUp != value))
				{
					this.OnIsCapUpChanging(value);
					this.SendPropertyChanging();
					this._IsCapUp = value;
					this.SendPropertyChanged("IsCapUp");
					this.OnIsCapUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCurrencyView")]
	public partial class tblCurrencyView : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CoinMarkCapID;
		
		private string _Name;
		
		private string _Symbol;
		
		private System.Nullable<int> _Rank;
		
		private System.Nullable<decimal> _MarketCapUSD;
		
		private System.Nullable<decimal> _AvailableSupply;
		
		private System.Nullable<decimal> _TotalSupply;
		
		private System.Nullable<decimal> _PriceUSD;
		
		private System.Nullable<decimal> _PriceBTC;
		
		private System.Nullable<decimal> _Volume24hUSD;
		
		private System.Nullable<int> _TransactionID;
		
		private System.Nullable<System.DateTime> _DateAdded;
		
		private System.Nullable<int> _DeleteTransactionID;
		
		private System.Nullable<System.DateTime> _DateDeleted;
		
		private System.Nullable<double> _PercentageChange1H;
		
		private System.Nullable<double> _PercentageChange24H;
		
		private System.Nullable<double> _PercentageChange7D;
		
		private System.Nullable<long> _LastUpdatedUTC;
		
		private System.Nullable<System.DateTime> _TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCoinMarkCapIDChanging(string value);
    partial void OnCoinMarkCapIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnRankChanging(System.Nullable<int> value);
    partial void OnRankChanged();
    partial void OnMarketCapUSDChanging(System.Nullable<decimal> value);
    partial void OnMarketCapUSDChanged();
    partial void OnAvailableSupplyChanging(System.Nullable<decimal> value);
    partial void OnAvailableSupplyChanged();
    partial void OnTotalSupplyChanging(System.Nullable<decimal> value);
    partial void OnTotalSupplyChanged();
    partial void OnPriceUSDChanging(System.Nullable<decimal> value);
    partial void OnPriceUSDChanged();
    partial void OnPriceBTCChanging(System.Nullable<decimal> value);
    partial void OnPriceBTCChanged();
    partial void OnVolume24hUSDChanging(System.Nullable<decimal> value);
    partial void OnVolume24hUSDChanged();
    partial void OnTransactionIDChanging(System.Nullable<int> value);
    partial void OnTransactionIDChanged();
    partial void OnDateAddedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateAddedChanged();
    partial void OnDeleteTransactionIDChanging(System.Nullable<int> value);
    partial void OnDeleteTransactionIDChanged();
    partial void OnDateDeletedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateDeletedChanged();
    partial void OnPercentageChange1HChanging(System.Nullable<double> value);
    partial void OnPercentageChange1HChanged();
    partial void OnPercentageChange24HChanging(System.Nullable<double> value);
    partial void OnPercentageChange24HChanged();
    partial void OnPercentageChange7DChanging(System.Nullable<double> value);
    partial void OnPercentageChange7DChanged();
    partial void OnLastUpdatedUTCChanging(System.Nullable<long> value);
    partial void OnLastUpdatedUTCChanged();
    partial void OnTimeStampChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStampChanged();
    #endregion
		
		public tblCurrencyView()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CoinMarkCapID", DbType="VarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CoinMarkCapID
		{
			get
			{
				return this._CoinMarkCapID;
			}
			set
			{
				if ((this._CoinMarkCapID != value))
				{
					this.OnCoinMarkCapIDChanging(value);
					this.SendPropertyChanging();
					this._CoinMarkCapID = value;
					this.SendPropertyChanged("CoinMarkCapID");
					this.OnCoinMarkCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(128)")]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rank", DbType="Int")]
		public System.Nullable<int> Rank
		{
			get
			{
				return this._Rank;
			}
			set
			{
				if ((this._Rank != value))
				{
					this.OnRankChanging(value);
					this.SendPropertyChanging();
					this._Rank = value;
					this.SendPropertyChanged("Rank");
					this.OnRankChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketCapUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> MarketCapUSD
		{
			get
			{
				return this._MarketCapUSD;
			}
			set
			{
				if ((this._MarketCapUSD != value))
				{
					this.OnMarketCapUSDChanging(value);
					this.SendPropertyChanging();
					this._MarketCapUSD = value;
					this.SendPropertyChanged("MarketCapUSD");
					this.OnMarketCapUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableSupply", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> AvailableSupply
		{
			get
			{
				return this._AvailableSupply;
			}
			set
			{
				if ((this._AvailableSupply != value))
				{
					this.OnAvailableSupplyChanging(value);
					this.SendPropertyChanging();
					this._AvailableSupply = value;
					this.SendPropertyChanged("AvailableSupply");
					this.OnAvailableSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalSupply", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> TotalSupply
		{
			get
			{
				return this._TotalSupply;
			}
			set
			{
				if ((this._TotalSupply != value))
				{
					this.OnTotalSupplyChanging(value);
					this.SendPropertyChanging();
					this._TotalSupply = value;
					this.SendPropertyChanged("TotalSupply");
					this.OnTotalSupplyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> PriceUSD
		{
			get
			{
				return this._PriceUSD;
			}
			set
			{
				if ((this._PriceUSD != value))
				{
					this.OnPriceUSDChanging(value);
					this.SendPropertyChanging();
					this._PriceUSD = value;
					this.SendPropertyChanged("PriceUSD");
					this.OnPriceUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBTC", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> PriceBTC
		{
			get
			{
				return this._PriceBTC;
			}
			set
			{
				if ((this._PriceBTC != value))
				{
					this.OnPriceBTCChanging(value);
					this.SendPropertyChanging();
					this._PriceBTC = value;
					this.SendPropertyChanged("PriceBTC");
					this.OnPriceBTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume24hUSD", DbType="Decimal(25,10)")]
		public System.Nullable<decimal> Volume24hUSD
		{
			get
			{
				return this._Volume24hUSD;
			}
			set
			{
				if ((this._Volume24hUSD != value))
				{
					this.OnVolume24hUSDChanging(value);
					this.SendPropertyChanging();
					this._Volume24hUSD = value;
					this.SendPropertyChanged("Volume24hUSD");
					this.OnVolume24hUSDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", DbType="Int")]
		public System.Nullable<int> TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateAdded", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateAdded
		{
			get
			{
				return this._DateAdded;
			}
			set
			{
				if ((this._DateAdded != value))
				{
					this.OnDateAddedChanging(value);
					this.SendPropertyChanging();
					this._DateAdded = value;
					this.SendPropertyChanged("DateAdded");
					this.OnDateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeleteTransactionID", DbType="Int")]
		public System.Nullable<int> DeleteTransactionID
		{
			get
			{
				return this._DeleteTransactionID;
			}
			set
			{
				if ((this._DeleteTransactionID != value))
				{
					this.OnDeleteTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._DeleteTransactionID = value;
					this.SendPropertyChanged("DeleteTransactionID");
					this.OnDeleteTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateDeleted", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateDeleted
		{
			get
			{
				return this._DateDeleted;
			}
			set
			{
				if ((this._DateDeleted != value))
				{
					this.OnDateDeletedChanging(value);
					this.SendPropertyChanging();
					this._DateDeleted = value;
					this.SendPropertyChanged("DateDeleted");
					this.OnDateDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange1H", DbType="Float")]
		public System.Nullable<double> PercentageChange1H
		{
			get
			{
				return this._PercentageChange1H;
			}
			set
			{
				if ((this._PercentageChange1H != value))
				{
					this.OnPercentageChange1HChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange1H = value;
					this.SendPropertyChanged("PercentageChange1H");
					this.OnPercentageChange1HChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange24H", DbType="Float")]
		public System.Nullable<double> PercentageChange24H
		{
			get
			{
				return this._PercentageChange24H;
			}
			set
			{
				if ((this._PercentageChange24H != value))
				{
					this.OnPercentageChange24HChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange24H = value;
					this.SendPropertyChanged("PercentageChange24H");
					this.OnPercentageChange24HChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PercentageChange7D", DbType="Float")]
		public System.Nullable<double> PercentageChange7D
		{
			get
			{
				return this._PercentageChange7D;
			}
			set
			{
				if ((this._PercentageChange7D != value))
				{
					this.OnPercentageChange7DChanging(value);
					this.SendPropertyChanging();
					this._PercentageChange7D = value;
					this.SendPropertyChanged("PercentageChange7D");
					this.OnPercentageChange7DChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedUTC", DbType="BigInt")]
		public System.Nullable<long> LastUpdatedUTC
		{
			get
			{
				return this._LastUpdatedUTC;
			}
			set
			{
				if ((this._LastUpdatedUTC != value))
				{
					this.OnLastUpdatedUTCChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedUTC = value;
					this.SendPropertyChanged("LastUpdatedUTC");
					this.OnLastUpdatedUTCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this.OnTimeStampChanging(value);
					this.SendPropertyChanging();
					this._TimeStamp = value;
					this.SendPropertyChanged("TimeStamp");
					this.OnTimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
