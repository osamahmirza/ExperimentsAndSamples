#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ANewWebOrder
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="anewweborder")]
	public partial class ANWODataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttlkpGeographicScope(tlkpGeographicScope instance);
    partial void UpdatetlkpGeographicScope(tlkpGeographicScope instance);
    partial void DeletetlkpGeographicScope(tlkpGeographicScope instance);
    partial void InserttblCampaignConnect(tblCampaignConnect instance);
    partial void UpdatetblCampaignConnect(tblCampaignConnect instance);
    partial void DeletetblCampaignConnect(tblCampaignConnect instance);
    partial void InserttblLink(tblLink instance);
    partial void UpdatetblLink(tblLink instance);
    partial void DeletetblLink(tblLink instance);
    partial void InserttblProductOrService(tblProductOrService instance);
    partial void UpdatetblProductOrService(tblProductOrService instance);
    partial void DeletetblProductOrService(tblProductOrService instance);
    partial void InserttlkpAlertPriority(tlkpAlertPriority instance);
    partial void UpdatetlkpAlertPriority(tlkpAlertPriority instance);
    partial void DeletetlkpAlertPriority(tlkpAlertPriority instance);
    partial void InserttlkpConnect(tlkpConnect instance);
    partial void UpdatetlkpConnect(tlkpConnect instance);
    partial void DeletetlkpConnect(tlkpConnect instance);
    partial void Insertaspnet_Membership(aspnet_Membership instance);
    partial void Updateaspnet_Membership(aspnet_Membership instance);
    partial void Deleteaspnet_Membership(aspnet_Membership instance);
    partial void InserttblAgreement(tblAgreement instance);
    partial void UpdatetblAgreement(tblAgreement instance);
    partial void DeletetblAgreement(tblAgreement instance);
    partial void InserttlkpAgreementType(tlkpAgreementType instance);
    partial void UpdatetlkpAgreementType(tlkpAgreementType instance);
    partial void DeletetlkpAgreementType(tlkpAgreementType instance);
    partial void InserttblAlert(tblAlert instance);
    partial void UpdatetblAlert(tblAlert instance);
    partial void DeletetblAlert(tblAlert instance);
    partial void InserttblProfile(tblProfile instance);
    partial void UpdatetblProfile(tblProfile instance);
    partial void DeletetblProfile(tblProfile instance);
    partial void InserttblSetting(tblSetting instance);
    partial void UpdatetblSetting(tblSetting instance);
    partial void DeletetblSetting(tblSetting instance);
    partial void Insertaspnet_User(aspnet_User instance);
    partial void Updateaspnet_User(aspnet_User instance);
    partial void Deleteaspnet_User(aspnet_User instance);
    partial void InserttblInvoice(tblInvoice instance);
    partial void UpdatetblInvoice(tblInvoice instance);
    partial void DeletetblInvoice(tblInvoice instance);
    partial void InserttblPlan(tblPlan instance);
    partial void UpdatetblPlan(tblPlan instance);
    partial void DeletetblPlan(tblPlan instance);
    partial void InserttlkpPlanDurationUnitType(tlkpPlanDurationUnitType instance);
    partial void UpdatetlkpPlanDurationUnitType(tlkpPlanDurationUnitType instance);
    partial void DeletetlkpPlanDurationUnitType(tlkpPlanDurationUnitType instance);
    partial void InserttlkpPlanType(tlkpPlanType instance);
    partial void UpdatetlkpPlanType(tlkpPlanType instance);
    partial void DeletetlkpPlanType(tlkpPlanType instance);
    partial void InserttlkpPageContentType(tlkpPageContentType instance);
    partial void UpdatetlkpPageContentType(tlkpPageContentType instance);
    partial void DeletetlkpPageContentType(tlkpPageContentType instance);
    partial void InserttlkpPage(tlkpPage instance);
    partial void UpdatetlkpPage(tlkpPage instance);
    partial void DeletetlkpPage(tlkpPage instance);
    partial void InserttblPageContent(tblPageContent instance);
    partial void UpdatetblPageContent(tblPageContent instance);
    partial void DeletetblPageContent(tblPageContent instance);
    partial void InserttblUserActivationRequest(tblUserActivationRequest instance);
    partial void UpdatetblUserActivationRequest(tblUserActivationRequest instance);
    partial void DeletetblUserActivationRequest(tblUserActivationRequest instance);
    partial void InserttblEmailTemplate(tblEmailTemplate instance);
    partial void UpdatetblEmailTemplate(tblEmailTemplate instance);
    partial void DeletetblEmailTemplate(tblEmailTemplate instance);
    partial void InserttblPaypalCountry(tblPaypalCountry instance);
    partial void UpdatetblPaypalCountry(tblPaypalCountry instance);
    partial void DeletetblPaypalCountry(tblPaypalCountry instance);
    partial void InserttlkpCategory(tlkpCategory instance);
    partial void UpdatetlkpCategory(tlkpCategory instance);
    partial void DeletetlkpCategory(tlkpCategory instance);
    partial void InserttblCampaign(tblCampaign instance);
    partial void UpdatetblCampaign(tblCampaign instance);
    partial void DeletetblCampaign(tblCampaign instance);
    #endregion
		
		public ANWODataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ANewWebOrderConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ANWODataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ANWODataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ANWODataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ANWODataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tlkpGeographicScope> tlkpGeographicScopes
		{
			get
			{
				return this.GetTable<tlkpGeographicScope>();
			}
		}
		
		public System.Data.Linq.Table<tblCampaignConnect> tblCampaignConnects
		{
			get
			{
				return this.GetTable<tblCampaignConnect>();
			}
		}
		
		public System.Data.Linq.Table<tblLink> tblLinks
		{
			get
			{
				return this.GetTable<tblLink>();
			}
		}
		
		public System.Data.Linq.Table<tblProductOrService> tblProductOrServices
		{
			get
			{
				return this.GetTable<tblProductOrService>();
			}
		}
		
		public System.Data.Linq.Table<tlkpAlertPriority> tlkpAlertPriorities
		{
			get
			{
				return this.GetTable<tlkpAlertPriority>();
			}
		}
		
		public System.Data.Linq.Table<tlkpConnect> tlkpConnects
		{
			get
			{
				return this.GetTable<tlkpConnect>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
		{
			get
			{
				return this.GetTable<aspnet_Membership>();
			}
		}
		
		public System.Data.Linq.Table<tblAgreement> tblAgreements
		{
			get
			{
				return this.GetTable<tblAgreement>();
			}
		}
		
		public System.Data.Linq.Table<tlkpAgreementType> tlkpAgreementTypes
		{
			get
			{
				return this.GetTable<tlkpAgreementType>();
			}
		}
		
		public System.Data.Linq.Table<vwCampaignConnect> vwCampaignConnects
		{
			get
			{
				return this.GetTable<vwCampaignConnect>();
			}
		}
		
		public System.Data.Linq.Table<vwCampaign> vwCampaigns
		{
			get
			{
				return this.GetTable<vwCampaign>();
			}
		}
		
		public System.Data.Linq.Table<tblAlert> tblAlerts
		{
			get
			{
				return this.GetTable<tblAlert>();
			}
		}
		
		public System.Data.Linq.Table<tblProfile> tblProfiles
		{
			get
			{
				return this.GetTable<tblProfile>();
			}
		}
		
		public System.Data.Linq.Table<tblSetting> tblSettings
		{
			get
			{
				return this.GetTable<tblSetting>();
			}
		}
		
		public System.Data.Linq.Table<aspnet_User> aspnet_Users
		{
			get
			{
				return this.GetTable<aspnet_User>();
			}
		}
		
		public System.Data.Linq.Table<tblInvoice> tblInvoices
		{
			get
			{
				return this.GetTable<tblInvoice>();
			}
		}
		
		public System.Data.Linq.Table<tblPlan> tblPlans
		{
			get
			{
				return this.GetTable<tblPlan>();
			}
		}
		
		public System.Data.Linq.Table<tlkpPlanDurationUnitType> tlkpPlanDurationUnitTypes
		{
			get
			{
				return this.GetTable<tlkpPlanDurationUnitType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpPlanType> tlkpPlanTypes
		{
			get
			{
				return this.GetTable<tlkpPlanType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpPageContentType> tlkpPageContentTypes
		{
			get
			{
				return this.GetTable<tlkpPageContentType>();
			}
		}
		
		public System.Data.Linq.Table<tlkpPage> tlkpPages
		{
			get
			{
				return this.GetTable<tlkpPage>();
			}
		}
		
		public System.Data.Linq.Table<tblPageContent> tblPageContents
		{
			get
			{
				return this.GetTable<tblPageContent>();
			}
		}
		
		public System.Data.Linq.Table<tblUserActivationRequest> tblUserActivationRequests
		{
			get
			{
				return this.GetTable<tblUserActivationRequest>();
			}
		}
		
		public System.Data.Linq.Table<tblEmailTemplate> tblEmailTemplates
		{
			get
			{
				return this.GetTable<tblEmailTemplate>();
			}
		}
		
		public System.Data.Linq.Table<tblPaypalCountry> tblPaypalCountries
		{
			get
			{
				return this.GetTable<tblPaypalCountry>();
			}
		}
		
		public System.Data.Linq.Table<tlkpCategory> tlkpCategories
		{
			get
			{
				return this.GetTable<tlkpCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblCampaign> tblCampaigns
		{
			get
			{
				return this.GetTable<tblCampaign>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateCampaign")]
		public int UpdateCampaign([global::System.Data.Linq.Mapping.ParameterAttribute(Name="CampaignXML", DbType="NVarChar(1)")] string campaignXML)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), campaignXML);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpGeographicScope")]
	public partial class tlkpGeographicScope : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private int _SortOrder;
		
		private EntitySet<tblCampaign> _tblCampaigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public tlkpGeographicScope()
		{
			this._tblCampaigns = new EntitySet<tblCampaign>(new Action<tblCampaign>(this.attach_tblCampaigns), new Action<tblCampaign>(this.detach_tblCampaigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpGeographicScope_tblCampaign", Storage="_tblCampaigns", ThisKey="ID", OtherKey="GeographicScopeID")]
		public EntitySet<tblCampaign> tblCampaigns
		{
			get
			{
				return this._tblCampaigns;
			}
			set
			{
				this._tblCampaigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tlkpGeographicScope = this;
		}
		
		private void detach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tlkpGeographicScope = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampaignConnect")]
	public partial class tblCampaignConnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CampaignID;
		
		private int _ConnectID;
		
		private string _Link;
		
		private EntityRef<tlkpConnect> _tlkpConnect;
		
		private EntityRef<tblCampaign> _tblCampaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnConnectIDChanging(int value);
    partial void OnConnectIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public tblCampaignConnect()
		{
			this._tlkpConnect = default(EntityRef<tlkpConnect>);
			this._tblCampaign = default(EntityRef<tblCampaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._tblCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectID", DbType="Int NOT NULL")]
		public int ConnectID
		{
			get
			{
				return this._ConnectID;
			}
			set
			{
				if ((this._ConnectID != value))
				{
					if (this._tlkpConnect.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnConnectIDChanging(value);
					this.SendPropertyChanging();
					this._ConnectID = value;
					this.SendPropertyChanged("ConnectID");
					this.OnConnectIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpConnect_tblCampaignConnect", Storage="_tlkpConnect", ThisKey="ConnectID", OtherKey="ID", IsForeignKey=true)]
		public tlkpConnect tlkpConnect
		{
			get
			{
				return this._tlkpConnect.Entity;
			}
			set
			{
				tlkpConnect previousValue = this._tlkpConnect.Entity;
				if (((previousValue != value) 
							|| (this._tlkpConnect.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpConnect.Entity = null;
						previousValue.tblCampaignConnects.Remove(this);
					}
					this._tlkpConnect.Entity = value;
					if ((value != null))
					{
						value.tblCampaignConnects.Add(this);
						this._ConnectID = value.ID;
					}
					else
					{
						this._ConnectID = default(int);
					}
					this.SendPropertyChanged("tlkpConnect");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblCampaignConnect", Storage="_tblCampaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public tblCampaign tblCampaign
		{
			get
			{
				return this._tblCampaign.Entity;
			}
			set
			{
				tblCampaign previousValue = this._tblCampaign.Entity;
				if (((previousValue != value) 
							|| (this._tblCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCampaign.Entity = null;
						previousValue.tblCampaignConnects.Remove(this);
					}
					this._tblCampaign.Entity = value;
					if ((value != null))
					{
						value.tblCampaignConnects.Add(this);
						this._CampaignID = value.ID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("tblCampaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblLink")]
	public partial class tblLink : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CampaignID;
		
		private string _Link;
		
		private string _Description;
		
		private EntityRef<tblCampaign> _tblCampaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public tblLink()
		{
			this._tblCampaign = default(EntityRef<tblCampaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._tblCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblLink", Storage="_tblCampaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public tblCampaign tblCampaign
		{
			get
			{
				return this._tblCampaign.Entity;
			}
			set
			{
				tblCampaign previousValue = this._tblCampaign.Entity;
				if (((previousValue != value) 
							|| (this._tblCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCampaign.Entity = null;
						previousValue.tblLinks.Remove(this);
					}
					this._tblCampaign.Entity = value;
					if ((value != null))
					{
						value.tblLinks.Add(this);
						this._CampaignID = value.ID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("tblCampaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProductOrService")]
	public partial class tblProductOrService : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CampaignID;
		
		private string _ProductOrService;
		
		private string _SearchPhraseForProductOrService;
		
		private EntityRef<tblCampaign> _tblCampaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnProductOrServiceChanging(string value);
    partial void OnProductOrServiceChanged();
    partial void OnSearchPhraseForProductOrServiceChanging(string value);
    partial void OnSearchPhraseForProductOrServiceChanged();
    #endregion
		
		public tblProductOrService()
		{
			this._tblCampaign = default(EntityRef<tblCampaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._tblCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductOrService", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ProductOrService
		{
			get
			{
				return this._ProductOrService;
			}
			set
			{
				if ((this._ProductOrService != value))
				{
					this.OnProductOrServiceChanging(value);
					this.SendPropertyChanging();
					this._ProductOrService = value;
					this.SendPropertyChanged("ProductOrService");
					this.OnProductOrServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchPhraseForProductOrService", DbType="NVarChar(155) NOT NULL", CanBeNull=false)]
		public string SearchPhraseForProductOrService
		{
			get
			{
				return this._SearchPhraseForProductOrService;
			}
			set
			{
				if ((this._SearchPhraseForProductOrService != value))
				{
					this.OnSearchPhraseForProductOrServiceChanging(value);
					this.SendPropertyChanging();
					this._SearchPhraseForProductOrService = value;
					this.SendPropertyChanged("SearchPhraseForProductOrService");
					this.OnSearchPhraseForProductOrServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblProductOrService", Storage="_tblCampaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public tblCampaign tblCampaign
		{
			get
			{
				return this._tblCampaign.Entity;
			}
			set
			{
				tblCampaign previousValue = this._tblCampaign.Entity;
				if (((previousValue != value) 
							|| (this._tblCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCampaign.Entity = null;
						previousValue.tblProductOrServices.Remove(this);
					}
					this._tblCampaign.Entity = value;
					if ((value != null))
					{
						value.tblProductOrServices.Add(this);
						this._CampaignID = value.ID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("tblCampaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpAlertPriority")]
	public partial class tlkpAlertPriority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblAlert> _tblAlerts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpAlertPriority()
		{
			this._tblAlerts = new EntitySet<tblAlert>(new Action<tblAlert>(this.attach_tblAlerts), new Action<tblAlert>(this.detach_tblAlerts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpAlertPriority_tblAlert", Storage="_tblAlerts", ThisKey="ID", OtherKey="PriorityID")]
		public EntitySet<tblAlert> tblAlerts
		{
			get
			{
				return this._tblAlerts;
			}
			set
			{
				this._tblAlerts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAlerts(tblAlert entity)
		{
			this.SendPropertyChanging();
			entity.tlkpAlertPriority = this;
		}
		
		private void detach_tblAlerts(tblAlert entity)
		{
			this.SendPropertyChanging();
			entity.tlkpAlertPriority = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpConnect")]
	public partial class tlkpConnect : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Image;
		
		private string _ShareLink;
		
		private EntitySet<tblCampaignConnect> _tblCampaignConnects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    partial void OnShareLinkChanging(string value);
    partial void OnShareLinkChanged();
    #endregion
		
		public tlkpConnect()
		{
			this._tblCampaignConnects = new EntitySet<tblCampaignConnect>(new Action<tblCampaignConnect>(this.attach_tblCampaignConnects), new Action<tblCampaignConnect>(this.detach_tblCampaignConnects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(512)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShareLink", DbType="NVarChar(1024)")]
		public string ShareLink
		{
			get
			{
				return this._ShareLink;
			}
			set
			{
				if ((this._ShareLink != value))
				{
					this.OnShareLinkChanging(value);
					this.SendPropertyChanging();
					this._ShareLink = value;
					this.SendPropertyChanged("ShareLink");
					this.OnShareLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpConnect_tblCampaignConnect", Storage="_tblCampaignConnects", ThisKey="ID", OtherKey="ConnectID")]
		public EntitySet<tblCampaignConnect> tblCampaignConnects
		{
			get
			{
				return this._tblCampaignConnects;
			}
			set
			{
				this._tblCampaignConnects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCampaignConnects(tblCampaignConnect entity)
		{
			this.SendPropertyChanging();
			entity.tlkpConnect = this;
		}
		
		private void detach_tblCampaignConnects(tblCampaignConnect entity)
		{
			this.SendPropertyChanging();
			entity.tlkpConnect = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
	public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _Password;
		
		private int _PasswordFormat;
		
		private string _PasswordSalt;
		
		private string _MobilePIN;
		
		private string _Email;
		
		private string _LoweredEmail;
		
		private string _PasswordQuestion;
		
		private string _PasswordAnswer;
		
		private bool _IsApproved;
		
		private bool _IsLockedOut;
		
		private System.DateTime _CreateDate;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _LastPasswordChangedDate;
		
		private System.DateTime _LastLockoutDate;
		
		private int _FailedPasswordAttemptCount;
		
		private System.DateTime _FailedPasswordAttemptWindowStart;
		
		private int _FailedPasswordAnswerAttemptCount;
		
		private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
		
		private string _Comment;
		
		private EntityRef<aspnet_User> _aspnet_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
		
		public aspnet_Membership()
		{
			this._aspnet_User = default(EntityRef<aspnet_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._aspnet_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
		public int PasswordFormat
		{
			get
			{
				return this._PasswordFormat;
			}
			set
			{
				if ((this._PasswordFormat != value))
				{
					this.OnPasswordFormatChanging(value);
					this.SendPropertyChanging();
					this._PasswordFormat = value;
					this.SendPropertyChanged("PasswordFormat");
					this.OnPasswordFormatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string PasswordSalt
		{
			get
			{
				return this._PasswordSalt;
			}
			set
			{
				if ((this._PasswordSalt != value))
				{
					this.OnPasswordSaltChanging(value);
					this.SendPropertyChanging();
					this._PasswordSalt = value;
					this.SendPropertyChanged("PasswordSalt");
					this.OnPasswordSaltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
		public string MobilePIN
		{
			get
			{
				return this._MobilePIN;
			}
			set
			{
				if ((this._MobilePIN != value))
				{
					this.OnMobilePINChanging(value);
					this.SendPropertyChanging();
					this._MobilePIN = value;
					this.SendPropertyChanged("MobilePIN");
					this.OnMobilePINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
		public string LoweredEmail
		{
			get
			{
				return this._LoweredEmail;
			}
			set
			{
				if ((this._LoweredEmail != value))
				{
					this.OnLoweredEmailChanging(value);
					this.SendPropertyChanging();
					this._LoweredEmail = value;
					this.SendPropertyChanged("LoweredEmail");
					this.OnLoweredEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
		public string PasswordQuestion
		{
			get
			{
				return this._PasswordQuestion;
			}
			set
			{
				if ((this._PasswordQuestion != value))
				{
					this.OnPasswordQuestionChanging(value);
					this.SendPropertyChanging();
					this._PasswordQuestion = value;
					this.SendPropertyChanged("PasswordQuestion");
					this.OnPasswordQuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
		public string PasswordAnswer
		{
			get
			{
				return this._PasswordAnswer;
			}
			set
			{
				if ((this._PasswordAnswer != value))
				{
					this.OnPasswordAnswerChanging(value);
					this.SendPropertyChanging();
					this._PasswordAnswer = value;
					this.SendPropertyChanged("PasswordAnswer");
					this.OnPasswordAnswerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
		public bool IsLockedOut
		{
			get
			{
				return this._IsLockedOut;
			}
			set
			{
				if ((this._IsLockedOut != value))
				{
					this.OnIsLockedOutChanging(value);
					this.SendPropertyChanging();
					this._IsLockedOut = value;
					this.SendPropertyChanged("IsLockedOut");
					this.OnIsLockedOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastPasswordChangedDate
		{
			get
			{
				return this._LastPasswordChangedDate;
			}
			set
			{
				if ((this._LastPasswordChangedDate != value))
				{
					this.OnLastPasswordChangedDateChanging(value);
					this.SendPropertyChanging();
					this._LastPasswordChangedDate = value;
					this.SendPropertyChanged("LastPasswordChangedDate");
					this.OnLastPasswordChangedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLockoutDate
		{
			get
			{
				return this._LastLockoutDate;
			}
			set
			{
				if ((this._LastLockoutDate != value))
				{
					this.OnLastLockoutDateChanging(value);
					this.SendPropertyChanging();
					this._LastLockoutDate = value;
					this.SendPropertyChanged("LastLockoutDate");
					this.OnLastLockoutDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAttemptCount
		{
			get
			{
				return this._FailedPasswordAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAttemptCount != value))
				{
					this.OnFailedPasswordAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAttemptCount");
					this.OnFailedPasswordAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAttemptWindowStart != value))
				{
					this.OnFailedPasswordAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
					this.OnFailedPasswordAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
		public int FailedPasswordAnswerAttemptCount
		{
			get
			{
				return this._FailedPasswordAnswerAttemptCount;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptCount != value))
				{
					this.OnFailedPasswordAnswerAttemptCountChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptCount = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
					this.OnFailedPasswordAnswerAttemptCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
		public System.DateTime FailedPasswordAnswerAttemptWindowStart
		{
			get
			{
				return this._FailedPasswordAnswerAttemptWindowStart;
			}
			set
			{
				if ((this._FailedPasswordAnswerAttemptWindowStart != value))
				{
					this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
					this.SendPropertyChanging();
					this._FailedPasswordAnswerAttemptWindowStart = value;
					this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
					this.OnFailedPasswordAnswerAttemptWindowStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this.OnCommentChanging(value);
					this.SendPropertyChanging();
					this._Comment = value;
					this.SendPropertyChanged("Comment");
					this.OnCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public aspnet_User aspnet_User
		{
			get
			{
				return this._aspnet_User.Entity;
			}
			set
			{
				aspnet_User previousValue = this._aspnet_User.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_User.Entity = null;
						previousValue.aspnet_Membership = null;
					}
					this._aspnet_User.Entity = value;
					if ((value != null))
					{
						value.aspnet_Membership = this;
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(System.Guid);
					}
					this.SendPropertyChanged("aspnet_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAgreement")]
	public partial class tblAgreement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Agreement;
		
		private bool _IsDefault;
		
		private int _AgreementTypeID;
		
		private EntitySet<tblProfile> _tblProfiles;
		
		private EntitySet<tblCampaign> _tblCampaigns;
		
		private EntityRef<tlkpAgreementType> _tlkpAgreementType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAgreementChanging(string value);
    partial void OnAgreementChanged();
    partial void OnIsDefaultChanging(bool value);
    partial void OnIsDefaultChanged();
    partial void OnAgreementTypeIDChanging(int value);
    partial void OnAgreementTypeIDChanged();
    #endregion
		
		public tblAgreement()
		{
			this._tblProfiles = new EntitySet<tblProfile>(new Action<tblProfile>(this.attach_tblProfiles), new Action<tblProfile>(this.detach_tblProfiles));
			this._tblCampaigns = new EntitySet<tblCampaign>(new Action<tblCampaign>(this.attach_tblCampaigns), new Action<tblCampaign>(this.detach_tblCampaigns));
			this._tlkpAgreementType = default(EntityRef<tlkpAgreementType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Agreement", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Agreement
		{
			get
			{
				return this._Agreement;
			}
			set
			{
				if ((this._Agreement != value))
				{
					this.OnAgreementChanging(value);
					this.SendPropertyChanging();
					this._Agreement = value;
					this.SendPropertyChanged("Agreement");
					this.OnAgreementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDefault", DbType="Bit NOT NULL")]
		public bool IsDefault
		{
			get
			{
				return this._IsDefault;
			}
			set
			{
				if ((this._IsDefault != value))
				{
					this.OnIsDefaultChanging(value);
					this.SendPropertyChanging();
					this._IsDefault = value;
					this.SendPropertyChanged("IsDefault");
					this.OnIsDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementTypeID", DbType="Int NOT NULL")]
		public int AgreementTypeID
		{
			get
			{
				return this._AgreementTypeID;
			}
			set
			{
				if ((this._AgreementTypeID != value))
				{
					if (this._tlkpAgreementType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgreementTypeIDChanging(value);
					this.SendPropertyChanging();
					this._AgreementTypeID = value;
					this.SendPropertyChanged("AgreementTypeID");
					this.OnAgreementTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAgreement_tblProfile", Storage="_tblProfiles", ThisKey="ID", OtherKey="AgreementID")]
		public EntitySet<tblProfile> tblProfiles
		{
			get
			{
				return this._tblProfiles;
			}
			set
			{
				this._tblProfiles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAgreement_tblCampaign", Storage="_tblCampaigns", ThisKey="ID", OtherKey="AgreementID")]
		public EntitySet<tblCampaign> tblCampaigns
		{
			get
			{
				return this._tblCampaigns;
			}
			set
			{
				this._tblCampaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpAgreementType_tblAgreement", Storage="_tlkpAgreementType", ThisKey="AgreementTypeID", OtherKey="ID", IsForeignKey=true)]
		public tlkpAgreementType tlkpAgreementType
		{
			get
			{
				return this._tlkpAgreementType.Entity;
			}
			set
			{
				tlkpAgreementType previousValue = this._tlkpAgreementType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpAgreementType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpAgreementType.Entity = null;
						previousValue.tblAgreements.Remove(this);
					}
					this._tlkpAgreementType.Entity = value;
					if ((value != null))
					{
						value.tblAgreements.Add(this);
						this._AgreementTypeID = value.ID;
					}
					else
					{
						this._AgreementTypeID = default(int);
					}
					this.SendPropertyChanged("tlkpAgreementType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProfiles(tblProfile entity)
		{
			this.SendPropertyChanging();
			entity.tblAgreement = this;
		}
		
		private void detach_tblProfiles(tblProfile entity)
		{
			this.SendPropertyChanging();
			entity.tblAgreement = null;
		}
		
		private void attach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tblAgreement = this;
		}
		
		private void detach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tblAgreement = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpAgreementType")]
	public partial class tlkpAgreementType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblAgreement> _tblAgreements;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpAgreementType()
		{
			this._tblAgreements = new EntitySet<tblAgreement>(new Action<tblAgreement>(this.attach_tblAgreements), new Action<tblAgreement>(this.detach_tblAgreements));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpAgreementType_tblAgreement", Storage="_tblAgreements", ThisKey="ID", OtherKey="AgreementTypeID")]
		public EntitySet<tblAgreement> tblAgreements
		{
			get
			{
				return this._tblAgreements;
			}
			set
			{
				this._tblAgreements.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAgreements(tblAgreement entity)
		{
			this.SendPropertyChanging();
			entity.tlkpAgreementType = this;
		}
		
		private void detach_tblAgreements(tblAgreement entity)
		{
			this.SendPropertyChanging();
			entity.tlkpAgreementType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwCampaignConnect")]
	public partial class vwCampaignConnect
	{
		
		private int _ID;
		
		private int _CampaignID;
		
		private int _ConnectID;
		
		private string _Name;
		
		private string _Link;
		
		private string _Image;
		
		public vwCampaignConnect()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					this._CampaignID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectID", DbType="Int NOT NULL")]
		public int ConnectID
		{
			get
			{
				return this._ConnectID;
			}
			set
			{
				if ((this._ConnectID != value))
				{
					this._ConnectID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this._Link = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="NVarChar(512)")]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this._Image = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwCampaign")]
	public partial class vwCampaign
	{
		
		private string _CategoryName;
		
		private string _GeographicScopeName;
		
		private int _ProfileID;
		
		private int _CategoryID;
		
		private int _ID;
		
		private int _GeographicScopeID;
		
		private string _Website;
		
		private string _TargetAudiance;
		
		private string _LongDescription;
		
		private string _MissionStatement;
		
		private string _Title;
		
		private string _Header;
		
		private string _CompaignEmail;
		
		private string _CompaignPhone;
		
		private string _CompaignFax;
		
		private System.Nullable<System.DateTime> _LastPaymentDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<System.DateTime> _LastReviewDate;
		
		private bool _IsPendingSetup;
		
		private bool _IsLive;
		
		private string _GeographicScope;
		
		private System.DateTime _LastUpdated;
		
		private System.DateTime _Created;
		
		private int _AgreementID;
		
		public vwCampaign()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicScopeName", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string GeographicScopeName
		{
			get
			{
				return this._GeographicScopeName;
			}
			set
			{
				if ((this._GeographicScopeName != value))
				{
					this._GeographicScopeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					this._ProfileID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL")]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this._ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicScopeID", DbType="Int NOT NULL")]
		public int GeographicScopeID
		{
			get
			{
				return this._GeographicScopeID;
			}
			set
			{
				if ((this._GeographicScopeID != value))
				{
					this._GeographicScopeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this._Website = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAudiance", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string TargetAudiance
		{
			get
			{
				return this._TargetAudiance;
			}
			set
			{
				if ((this._TargetAudiance != value))
				{
					this._TargetAudiance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(2048) NOT NULL", CanBeNull=false)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this._LongDescription = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionStatement", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MissionStatement
		{
			get
			{
				return this._MissionStatement;
			}
			set
			{
				if ((this._MissionStatement != value))
				{
					this._MissionStatement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(69) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this._Header = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignEmail", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string CompaignEmail
		{
			get
			{
				return this._CompaignEmail;
			}
			set
			{
				if ((this._CompaignEmail != value))
				{
					this._CompaignEmail = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignPhone", DbType="NVarChar(14)")]
		public string CompaignPhone
		{
			get
			{
				return this._CompaignPhone;
			}
			set
			{
				if ((this._CompaignPhone != value))
				{
					this._CompaignPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignFax", DbType="NVarChar(14)")]
		public string CompaignFax
		{
			get
			{
				return this._CompaignFax;
			}
			set
			{
				if ((this._CompaignFax != value))
				{
					this._CompaignFax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPaymentDate
		{
			get
			{
				return this._LastPaymentDate;
			}
			set
			{
				if ((this._LastPaymentDate != value))
				{
					this._LastPaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this._ExpiryDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReviewDate
		{
			get
			{
				return this._LastReviewDate;
			}
			set
			{
				if ((this._LastReviewDate != value))
				{
					this._LastReviewDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPendingSetup", DbType="Bit NOT NULL")]
		public bool IsPendingSetup
		{
			get
			{
				return this._IsPendingSetup;
			}
			set
			{
				if ((this._IsPendingSetup != value))
				{
					this._IsPendingSetup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLive", DbType="Bit NOT NULL")]
		public bool IsLive
		{
			get
			{
				return this._IsLive;
			}
			set
			{
				if ((this._IsLive != value))
				{
					this._IsLive = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicScope", DbType="NVarChar(2048)")]
		public string GeographicScope
		{
			get
			{
				return this._GeographicScope;
			}
			set
			{
				if ((this._GeographicScope != value))
				{
					this._GeographicScope = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this._LastUpdated = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this._Created = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementID", DbType="Int NOT NULL")]
		public int AgreementID
		{
			get
			{
				return this._AgreementID;
			}
			set
			{
				if ((this._AgreementID != value))
				{
					this._AgreementID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAlert")]
	public partial class tblAlert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Subject;
		
		private string _Message;
		
		private int _PriorityID;
		
		private int _ProfileID;
		
		private bool _IsRead;
		
		private System.DateTime _DateCreated;
		
		private System.DateTime _DateRead;
		
		private EntityRef<tlkpAlertPriority> _tlkpAlertPriority;
		
		private EntityRef<tblProfile> _tblProfile;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnPriorityIDChanging(int value);
    partial void OnPriorityIDChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnIsReadChanging(bool value);
    partial void OnIsReadChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateReadChanging(System.DateTime value);
    partial void OnDateReadChanged();
    #endregion
		
		public tblAlert()
		{
			this._tlkpAlertPriority = default(EntityRef<tlkpAlertPriority>);
			this._tblProfile = default(EntityRef<tblProfile>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriorityID", DbType="Int NOT NULL")]
		public int PriorityID
		{
			get
			{
				return this._PriorityID;
			}
			set
			{
				if ((this._PriorityID != value))
				{
					if (this._tlkpAlertPriority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPriorityIDChanging(value);
					this.SendPropertyChanging();
					this._PriorityID = value;
					this.SendPropertyChanged("PriorityID");
					this.OnPriorityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					if (this._tblProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRead", DbType="Bit NOT NULL")]
		public bool IsRead
		{
			get
			{
				return this._IsRead;
			}
			set
			{
				if ((this._IsRead != value))
				{
					this.OnIsReadChanging(value);
					this.SendPropertyChanging();
					this._IsRead = value;
					this.SendPropertyChanged("IsRead");
					this.OnIsReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateRead", DbType="DateTime NOT NULL")]
		public System.DateTime DateRead
		{
			get
			{
				return this._DateRead;
			}
			set
			{
				if ((this._DateRead != value))
				{
					this.OnDateReadChanging(value);
					this.SendPropertyChanging();
					this._DateRead = value;
					this.SendPropertyChanged("DateRead");
					this.OnDateReadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpAlertPriority_tblAlert", Storage="_tlkpAlertPriority", ThisKey="PriorityID", OtherKey="ID", IsForeignKey=true)]
		public tlkpAlertPriority tlkpAlertPriority
		{
			get
			{
				return this._tlkpAlertPriority.Entity;
			}
			set
			{
				tlkpAlertPriority previousValue = this._tlkpAlertPriority.Entity;
				if (((previousValue != value) 
							|| (this._tlkpAlertPriority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpAlertPriority.Entity = null;
						previousValue.tblAlerts.Remove(this);
					}
					this._tlkpAlertPriority.Entity = value;
					if ((value != null))
					{
						value.tblAlerts.Add(this);
						this._PriorityID = value.ID;
					}
					else
					{
						this._PriorityID = default(int);
					}
					this.SendPropertyChanged("tlkpAlertPriority");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblAlert", Storage="_tblProfile", ThisKey="ProfileID", OtherKey="ID", IsForeignKey=true)]
		public tblProfile tblProfile
		{
			get
			{
				return this._tblProfile.Entity;
			}
			set
			{
				tblProfile previousValue = this._tblProfile.Entity;
				if (((previousValue != value) 
							|| (this._tblProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProfile.Entity = null;
						previousValue.tblAlerts.Remove(this);
					}
					this._tblProfile.Entity = value;
					if ((value != null))
					{
						value.tblAlerts.Add(this);
						this._ProfileID = value.ID;
					}
					else
					{
						this._ProfileID = default(int);
					}
					this.SendPropertyChanged("tblProfile");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProfile")]
	public partial class tblProfile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _UserID;
		
		private string _FirstName;
		
		private string _MiddleInitials;
		
		private string _LastName;
		
		private string _StreetAddress;
		
		private string _Apartment;
		
		private string _POBox;
		
		private string _City;
		
		private string _Region;
		
		private int _CountryID;
		
		private string _PostalCode;
		
		private string _Phone1;
		
		private string _Phone1Ext;
		
		private string _Phone2;
		
		private string _Phone2Ext;
		
		private string _Fax;
		
		private System.DateTime _CreatedDate;
		
		private System.Nullable<int> _AgreementID;
		
		private EntitySet<tblAlert> _tblAlerts;
		
		private EntitySet<tblInvoice> _tblInvoices;
		
		private EntitySet<tblCampaign> _tblCampaigns;
		
		private EntityRef<tblAgreement> _tblAgreement;
		
		private EntityRef<tblPaypalCountry> _tblPaypalCountry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnMiddleInitialsChanging(string value);
    partial void OnMiddleInitialsChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnStreetAddressChanging(string value);
    partial void OnStreetAddressChanged();
    partial void OnApartmentChanging(string value);
    partial void OnApartmentChanged();
    partial void OnPOBoxChanging(string value);
    partial void OnPOBoxChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnRegionChanging(string value);
    partial void OnRegionChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnPostalCodeChanging(string value);
    partial void OnPostalCodeChanged();
    partial void OnPhone1Changing(string value);
    partial void OnPhone1Changed();
    partial void OnPhone1ExtChanging(string value);
    partial void OnPhone1ExtChanged();
    partial void OnPhone2Changing(string value);
    partial void OnPhone2Changed();
    partial void OnPhone2ExtChanging(string value);
    partial void OnPhone2ExtChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAgreementIDChanging(System.Nullable<int> value);
    partial void OnAgreementIDChanged();
    #endregion
		
		public tblProfile()
		{
			this._tblAlerts = new EntitySet<tblAlert>(new Action<tblAlert>(this.attach_tblAlerts), new Action<tblAlert>(this.detach_tblAlerts));
			this._tblInvoices = new EntitySet<tblInvoice>(new Action<tblInvoice>(this.attach_tblInvoices), new Action<tblInvoice>(this.detach_tblInvoices));
			this._tblCampaigns = new EntitySet<tblCampaign>(new Action<tblCampaign>(this.attach_tblCampaigns), new Action<tblCampaign>(this.detach_tblCampaigns));
			this._tblAgreement = default(EntityRef<tblAgreement>);
			this._tblPaypalCountry = default(EntityRef<tblPaypalCountry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MiddleInitials", DbType="NVarChar(1)")]
		public string MiddleInitials
		{
			get
			{
				return this._MiddleInitials;
			}
			set
			{
				if ((this._MiddleInitials != value))
				{
					this.OnMiddleInitialsChanging(value);
					this.SendPropertyChanging();
					this._MiddleInitials = value;
					this.SendPropertyChanged("MiddleInitials");
					this.OnMiddleInitialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetAddress", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string StreetAddress
		{
			get
			{
				return this._StreetAddress;
			}
			set
			{
				if ((this._StreetAddress != value))
				{
					this.OnStreetAddressChanging(value);
					this.SendPropertyChanging();
					this._StreetAddress = value;
					this.SendPropertyChanged("StreetAddress");
					this.OnStreetAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apartment", DbType="NVarChar(128)")]
		public string Apartment
		{
			get
			{
				return this._Apartment;
			}
			set
			{
				if ((this._Apartment != value))
				{
					this.OnApartmentChanging(value);
					this.SendPropertyChanging();
					this._Apartment = value;
					this.SendPropertyChanged("Apartment");
					this.OnApartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POBox", DbType="NVarChar(10)")]
		public string POBox
		{
			get
			{
				return this._POBox;
			}
			set
			{
				if ((this._POBox != value))
				{
					this.OnPOBoxChanging(value);
					this.SendPropertyChanging();
					this._POBox = value;
					this.SendPropertyChanged("POBox");
					this.OnPOBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Region", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Region
		{
			get
			{
				return this._Region;
			}
			set
			{
				if ((this._Region != value))
				{
					this.OnRegionChanging(value);
					this.SendPropertyChanging();
					this._Region = value;
					this.SendPropertyChanged("Region");
					this.OnRegionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this._tblPaypalCountry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostalCode", DbType="NVarChar(10)")]
		public string PostalCode
		{
			get
			{
				return this._PostalCode;
			}
			set
			{
				if ((this._PostalCode != value))
				{
					this.OnPostalCodeChanging(value);
					this.SendPropertyChanging();
					this._PostalCode = value;
					this.SendPropertyChanged("PostalCode");
					this.OnPostalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1", DbType="NVarChar(11) NOT NULL", CanBeNull=false)]
		public string Phone1
		{
			get
			{
				return this._Phone1;
			}
			set
			{
				if ((this._Phone1 != value))
				{
					this.OnPhone1Changing(value);
					this.SendPropertyChanging();
					this._Phone1 = value;
					this.SendPropertyChanged("Phone1");
					this.OnPhone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone1Ext", DbType="NVarChar(10)")]
		public string Phone1Ext
		{
			get
			{
				return this._Phone1Ext;
			}
			set
			{
				if ((this._Phone1Ext != value))
				{
					this.OnPhone1ExtChanging(value);
					this.SendPropertyChanging();
					this._Phone1Ext = value;
					this.SendPropertyChanged("Phone1Ext");
					this.OnPhone1ExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2", DbType="NVarChar(11)")]
		public string Phone2
		{
			get
			{
				return this._Phone2;
			}
			set
			{
				if ((this._Phone2 != value))
				{
					this.OnPhone2Changing(value);
					this.SendPropertyChanging();
					this._Phone2 = value;
					this.SendPropertyChanged("Phone2");
					this.OnPhone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone2Ext", DbType="NVarChar(10)")]
		public string Phone2Ext
		{
			get
			{
				return this._Phone2Ext;
			}
			set
			{
				if ((this._Phone2Ext != value))
				{
					this.OnPhone2ExtChanging(value);
					this.SendPropertyChanging();
					this._Phone2Ext = value;
					this.SendPropertyChanged("Phone2Ext");
					this.OnPhone2ExtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(11)")]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementID", DbType="Int")]
		public System.Nullable<int> AgreementID
		{
			get
			{
				return this._AgreementID;
			}
			set
			{
				if ((this._AgreementID != value))
				{
					if (this._tblAgreement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgreementIDChanging(value);
					this.SendPropertyChanging();
					this._AgreementID = value;
					this.SendPropertyChanged("AgreementID");
					this.OnAgreementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblAlert", Storage="_tblAlerts", ThisKey="ID", OtherKey="ProfileID")]
		public EntitySet<tblAlert> tblAlerts
		{
			get
			{
				return this._tblAlerts;
			}
			set
			{
				this._tblAlerts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblInvoice", Storage="_tblInvoices", ThisKey="ID", OtherKey="ProfileID")]
		public EntitySet<tblInvoice> tblInvoices
		{
			get
			{
				return this._tblInvoices;
			}
			set
			{
				this._tblInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblCampaign", Storage="_tblCampaigns", ThisKey="ID", OtherKey="ProfileID")]
		public EntitySet<tblCampaign> tblCampaigns
		{
			get
			{
				return this._tblCampaigns;
			}
			set
			{
				this._tblCampaigns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAgreement_tblProfile", Storage="_tblAgreement", ThisKey="AgreementID", OtherKey="ID", IsForeignKey=true)]
		public tblAgreement tblAgreement
		{
			get
			{
				return this._tblAgreement.Entity;
			}
			set
			{
				tblAgreement previousValue = this._tblAgreement.Entity;
				if (((previousValue != value) 
							|| (this._tblAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAgreement.Entity = null;
						previousValue.tblProfiles.Remove(this);
					}
					this._tblAgreement.Entity = value;
					if ((value != null))
					{
						value.tblProfiles.Add(this);
						this._AgreementID = value.ID;
					}
					else
					{
						this._AgreementID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblAgreement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPaypalCountry_tblProfile", Storage="_tblPaypalCountry", ThisKey="CountryID", OtherKey="ID", IsForeignKey=true)]
		public tblPaypalCountry tblPaypalCountry
		{
			get
			{
				return this._tblPaypalCountry.Entity;
			}
			set
			{
				tblPaypalCountry previousValue = this._tblPaypalCountry.Entity;
				if (((previousValue != value) 
							|| (this._tblPaypalCountry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPaypalCountry.Entity = null;
						previousValue.tblProfiles.Remove(this);
					}
					this._tblPaypalCountry.Entity = value;
					if ((value != null))
					{
						value.tblProfiles.Add(this);
						this._CountryID = value.ID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("tblPaypalCountry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblAlerts(tblAlert entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = this;
		}
		
		private void detach_tblAlerts(tblAlert entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = null;
		}
		
		private void attach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = this;
		}
		
		private void detach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = null;
		}
		
		private void attach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = this;
		}
		
		private void detach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tblProfile = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblSetting")]
	public partial class tblSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SettingKey;
		
		private string _Setting;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSettingKeyChanging(string value);
    partial void OnSettingKeyChanged();
    partial void OnSettingChanging(string value);
    partial void OnSettingChanged();
    #endregion
		
		public tblSetting()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingKey", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string SettingKey
		{
			get
			{
				return this._SettingKey;
			}
			set
			{
				if ((this._SettingKey != value))
				{
					this.OnSettingKeyChanging(value);
					this.SendPropertyChanging();
					this._SettingKey = value;
					this.SendPropertyChanged("SettingKey");
					this.OnSettingKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Setting", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Setting
		{
			get
			{
				return this._Setting;
			}
			set
			{
				if ((this._Setting != value))
				{
					this.OnSettingChanging(value);
					this.SendPropertyChanging();
					this._Setting = value;
					this.SendPropertyChanged("Setting");
					this.OnSettingChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
	public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ApplicationId;
		
		private System.Guid _UserId;
		
		private string _UserName;
		
		private string _LoweredUserName;
		
		private string _MobileAlias;
		
		private bool _IsAnonymous;
		
		private System.DateTime _LastActivityDate;
		
		private EntityRef<aspnet_Membership> _aspnet_Membership;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
		
		public aspnet_User()
		{
			this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string LoweredUserName
		{
			get
			{
				return this._LoweredUserName;
			}
			set
			{
				if ((this._LoweredUserName != value))
				{
					this.OnLoweredUserNameChanging(value);
					this.SendPropertyChanging();
					this._LoweredUserName = value;
					this.SendPropertyChanged("LoweredUserName");
					this.OnLoweredUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
		public string MobileAlias
		{
			get
			{
				return this._MobileAlias;
			}
			set
			{
				if ((this._MobileAlias != value))
				{
					this.OnMobileAliasChanging(value);
					this.SendPropertyChanging();
					this._MobileAlias = value;
					this.SendPropertyChanged("MobileAlias");
					this.OnMobileAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
		public bool IsAnonymous
		{
			get
			{
				return this._IsAnonymous;
			}
			set
			{
				if ((this._IsAnonymous != value))
				{
					this.OnIsAnonymousChanging(value);
					this.SendPropertyChanging();
					this._IsAnonymous = value;
					this.SendPropertyChanged("IsAnonymous");
					this.OnIsAnonymousChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastActivityDate
		{
			get
			{
				return this._LastActivityDate;
			}
			set
			{
				if ((this._LastActivityDate != value))
				{
					this.OnLastActivityDateChanging(value);
					this.SendPropertyChanging();
					this._LastActivityDate = value;
					this.SendPropertyChanged("LastActivityDate");
					this.OnLastActivityDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
		public aspnet_Membership aspnet_Membership
		{
			get
			{
				return this._aspnet_Membership.Entity;
			}
			set
			{
				aspnet_Membership previousValue = this._aspnet_Membership.Entity;
				if (((previousValue != value) 
							|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._aspnet_Membership.Entity = null;
						previousValue.aspnet_User = null;
					}
					this._aspnet_Membership.Entity = value;
					if ((value != null))
					{
						value.aspnet_User = this;
					}
					this.SendPropertyChanged("aspnet_Membership");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblInvoice")]
	public partial class tblInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID;
		
		private int _AutoID;
		
		private int _CampaignID;
		
		private int _PlanID;
		
		private int _ProfileID;
		
		private string _PaymentStatus;
		
		private string _PaymentType;
		
		private string _AddressStatus;
		
		private string _PayerStatus;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _PayerEmail;
		
		private string _PayerID;
		
		private string _AddressName;
		
		private string _AddressCountry;
		
		private string _AddressCountryCode;
		
		private string _AddressZip;
		
		private string _AddressState;
		
		private string _AddressCity;
		
		private string _AddressStreet;
		
		private string _Business;
		
		private string _ReceiverEmail;
		
		private string _ResidenceCountry;
		
		private string _ItemName;
		
		private string _ItemNumber;
		
		private string _Quantity;
		
		private string _Shipping;
		
		private string _Tax;
		
		private string _MCCurrency;
		
		private string _MCFee;
		
		private string _MCGross;
		
		private string _MCGross1;
		
		private string _TxnType;
		
		private string _TxnID;
		
		private string _NotifyVersion;
		
		private string _FraudManagementPendingFilter;
		
		private string _PendingReason;
		
		private string _ProtectionEligibility;
		
		private string _ReasonCode;
		
		private System.DateTime _CreatedDate;
		
		private string _ParentTxnId;
		
		private string _PaymentDate;
		
		private string _ReceiptID;
		
		private string _Invoice;
		
		private string _PaypalIP;
		
		private string _CustomerIP;
		
		private string _PromotionCode;
		
		private string _ReceiverID;
		
		private EntityRef<tblProfile> _tblProfile;
		
		private EntityRef<tblPlan> _tblPlan;
		
		private EntityRef<tblCampaign> _tblCampaign;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnAutoIDChanging(int value);
    partial void OnAutoIDChanged();
    partial void OnCampaignIDChanging(int value);
    partial void OnCampaignIDChanged();
    partial void OnPlanIDChanging(int value);
    partial void OnPlanIDChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnPaymentStatusChanging(string value);
    partial void OnPaymentStatusChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnAddressStatusChanging(string value);
    partial void OnAddressStatusChanged();
    partial void OnPayerStatusChanging(string value);
    partial void OnPayerStatusChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnPayerEmailChanging(string value);
    partial void OnPayerEmailChanged();
    partial void OnPayerIDChanging(string value);
    partial void OnPayerIDChanged();
    partial void OnAddressNameChanging(string value);
    partial void OnAddressNameChanged();
    partial void OnAddressCountryChanging(string value);
    partial void OnAddressCountryChanged();
    partial void OnAddressCountryCodeChanging(string value);
    partial void OnAddressCountryCodeChanged();
    partial void OnAddressZipChanging(string value);
    partial void OnAddressZipChanged();
    partial void OnAddressStateChanging(string value);
    partial void OnAddressStateChanged();
    partial void OnAddressCityChanging(string value);
    partial void OnAddressCityChanged();
    partial void OnAddressStreetChanging(string value);
    partial void OnAddressStreetChanged();
    partial void OnBusinessChanging(string value);
    partial void OnBusinessChanged();
    partial void OnReceiverEmailChanging(string value);
    partial void OnReceiverEmailChanged();
    partial void OnResidenceCountryChanging(string value);
    partial void OnResidenceCountryChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemNumberChanging(string value);
    partial void OnItemNumberChanged();
    partial void OnQuantityChanging(string value);
    partial void OnQuantityChanged();
    partial void OnShippingChanging(string value);
    partial void OnShippingChanged();
    partial void OnTaxChanging(string value);
    partial void OnTaxChanged();
    partial void OnMCCurrencyChanging(string value);
    partial void OnMCCurrencyChanged();
    partial void OnMCFeeChanging(string value);
    partial void OnMCFeeChanged();
    partial void OnMCGrossChanging(string value);
    partial void OnMCGrossChanged();
    partial void OnMCGross1Changing(string value);
    partial void OnMCGross1Changed();
    partial void OnTxnTypeChanging(string value);
    partial void OnTxnTypeChanged();
    partial void OnTxnIDChanging(string value);
    partial void OnTxnIDChanged();
    partial void OnNotifyVersionChanging(string value);
    partial void OnNotifyVersionChanged();
    partial void OnFraudManagementPendingFilterChanging(string value);
    partial void OnFraudManagementPendingFilterChanged();
    partial void OnPendingReasonChanging(string value);
    partial void OnPendingReasonChanged();
    partial void OnProtectionEligibilityChanging(string value);
    partial void OnProtectionEligibilityChanged();
    partial void OnReasonCodeChanging(string value);
    partial void OnReasonCodeChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnParentTxnIdChanging(string value);
    partial void OnParentTxnIdChanged();
    partial void OnPaymentDateChanging(string value);
    partial void OnPaymentDateChanged();
    partial void OnReceiptIDChanging(string value);
    partial void OnReceiptIDChanged();
    partial void OnInvoiceChanging(string value);
    partial void OnInvoiceChanged();
    partial void OnPaypalIPChanging(string value);
    partial void OnPaypalIPChanged();
    partial void OnCustomerIPChanging(string value);
    partial void OnCustomerIPChanged();
    partial void OnPromotionCodeChanging(string value);
    partial void OnPromotionCodeChanged();
    partial void OnReceiverIDChanging(string value);
    partial void OnReceiverIDChanged();
    #endregion
		
		public tblInvoice()
		{
			this._tblProfile = default(EntityRef<tblProfile>);
			this._tblPlan = default(EntityRef<tblPlan>);
			this._tblCampaign = default(EntityRef<tblCampaign>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="VarChar(64) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutoID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int AutoID
		{
			get
			{
				return this._AutoID;
			}
			set
			{
				if ((this._AutoID != value))
				{
					this.OnAutoIDChanging(value);
					this.SendPropertyChanging();
					this._AutoID = value;
					this.SendPropertyChanged("AutoID");
					this.OnAutoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CampaignID", DbType="Int NOT NULL")]
		public int CampaignID
		{
			get
			{
				return this._CampaignID;
			}
			set
			{
				if ((this._CampaignID != value))
				{
					if (this._tblCampaign.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCampaignIDChanging(value);
					this.SendPropertyChanging();
					this._CampaignID = value;
					this.SendPropertyChanged("CampaignID");
					this.OnCampaignIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanID", DbType="Int NOT NULL")]
		public int PlanID
		{
			get
			{
				return this._PlanID;
			}
			set
			{
				if ((this._PlanID != value))
				{
					if (this._tblPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanIDChanging(value);
					this.SendPropertyChanging();
					this._PlanID = value;
					this.SendPropertyChanged("PlanID");
					this.OnPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					if (this._tblProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="VarChar(64)")]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(64)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressStatus", DbType="VarChar(64)")]
		public string AddressStatus
		{
			get
			{
				return this._AddressStatus;
			}
			set
			{
				if ((this._AddressStatus != value))
				{
					this.OnAddressStatusChanging(value);
					this.SendPropertyChanging();
					this._AddressStatus = value;
					this.SendPropertyChanged("AddressStatus");
					this.OnAddressStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerStatus", DbType="VarChar(64)")]
		public string PayerStatus
		{
			get
			{
				return this._PayerStatus;
			}
			set
			{
				if ((this._PayerStatus != value))
				{
					this.OnPayerStatusChanging(value);
					this.SendPropertyChanging();
					this._PayerStatus = value;
					this.SendPropertyChanged("PayerStatus");
					this.OnPayerStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(64)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(64)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerEmail", DbType="VarChar(256)")]
		public string PayerEmail
		{
			get
			{
				return this._PayerEmail;
			}
			set
			{
				if ((this._PayerEmail != value))
				{
					this.OnPayerEmailChanging(value);
					this.SendPropertyChanging();
					this._PayerEmail = value;
					this.SendPropertyChanged("PayerEmail");
					this.OnPayerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayerID", DbType="VarChar(128)")]
		public string PayerID
		{
			get
			{
				return this._PayerID;
			}
			set
			{
				if ((this._PayerID != value))
				{
					this.OnPayerIDChanging(value);
					this.SendPropertyChanging();
					this._PayerID = value;
					this.SendPropertyChanged("PayerID");
					this.OnPayerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressName", DbType="VarChar(128)")]
		public string AddressName
		{
			get
			{
				return this._AddressName;
			}
			set
			{
				if ((this._AddressName != value))
				{
					this.OnAddressNameChanging(value);
					this.SendPropertyChanging();
					this._AddressName = value;
					this.SendPropertyChanged("AddressName");
					this.OnAddressNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressCountry", DbType="VarChar(64)")]
		public string AddressCountry
		{
			get
			{
				return this._AddressCountry;
			}
			set
			{
				if ((this._AddressCountry != value))
				{
					this.OnAddressCountryChanging(value);
					this.SendPropertyChanging();
					this._AddressCountry = value;
					this.SendPropertyChanged("AddressCountry");
					this.OnAddressCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressCountryCode", DbType="VarChar(4)")]
		public string AddressCountryCode
		{
			get
			{
				return this._AddressCountryCode;
			}
			set
			{
				if ((this._AddressCountryCode != value))
				{
					this.OnAddressCountryCodeChanging(value);
					this.SendPropertyChanging();
					this._AddressCountryCode = value;
					this.SendPropertyChanged("AddressCountryCode");
					this.OnAddressCountryCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressZip", DbType="VarChar(10)")]
		public string AddressZip
		{
			get
			{
				return this._AddressZip;
			}
			set
			{
				if ((this._AddressZip != value))
				{
					this.OnAddressZipChanging(value);
					this.SendPropertyChanging();
					this._AddressZip = value;
					this.SendPropertyChanged("AddressZip");
					this.OnAddressZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressState", DbType="VarChar(64)")]
		public string AddressState
		{
			get
			{
				return this._AddressState;
			}
			set
			{
				if ((this._AddressState != value))
				{
					this.OnAddressStateChanging(value);
					this.SendPropertyChanging();
					this._AddressState = value;
					this.SendPropertyChanged("AddressState");
					this.OnAddressStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressCity", DbType="VarChar(64)")]
		public string AddressCity
		{
			get
			{
				return this._AddressCity;
			}
			set
			{
				if ((this._AddressCity != value))
				{
					this.OnAddressCityChanging(value);
					this.SendPropertyChanging();
					this._AddressCity = value;
					this.SendPropertyChanged("AddressCity");
					this.OnAddressCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressStreet", DbType="VarChar(256)")]
		public string AddressStreet
		{
			get
			{
				return this._AddressStreet;
			}
			set
			{
				if ((this._AddressStreet != value))
				{
					this.OnAddressStreetChanging(value);
					this.SendPropertyChanging();
					this._AddressStreet = value;
					this.SendPropertyChanged("AddressStreet");
					this.OnAddressStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Business", DbType="VarChar(256)")]
		public string Business
		{
			get
			{
				return this._Business;
			}
			set
			{
				if ((this._Business != value))
				{
					this.OnBusinessChanging(value);
					this.SendPropertyChanging();
					this._Business = value;
					this.SendPropertyChanged("Business");
					this.OnBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverEmail", DbType="VarChar(256)")]
		public string ReceiverEmail
		{
			get
			{
				return this._ReceiverEmail;
			}
			set
			{
				if ((this._ReceiverEmail != value))
				{
					this.OnReceiverEmailChanging(value);
					this.SendPropertyChanging();
					this._ReceiverEmail = value;
					this.SendPropertyChanged("ReceiverEmail");
					this.OnReceiverEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResidenceCountry", DbType="VarChar(64)")]
		public string ResidenceCountry
		{
			get
			{
				return this._ResidenceCountry;
			}
			set
			{
				if ((this._ResidenceCountry != value))
				{
					this.OnResidenceCountryChanging(value);
					this.SendPropertyChanging();
					this._ResidenceCountry = value;
					this.SendPropertyChanged("ResidenceCountry");
					this.OnResidenceCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="VarChar(256)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemNumber", DbType="VarChar(64)")]
		public string ItemNumber
		{
			get
			{
				return this._ItemNumber;
			}
			set
			{
				if ((this._ItemNumber != value))
				{
					this.OnItemNumberChanging(value);
					this.SendPropertyChanging();
					this._ItemNumber = value;
					this.SendPropertyChanged("ItemNumber");
					this.OnItemNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="VarChar(10)")]
		public string Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shipping", DbType="VarChar(10)")]
		public string Shipping
		{
			get
			{
				return this._Shipping;
			}
			set
			{
				if ((this._Shipping != value))
				{
					this.OnShippingChanging(value);
					this.SendPropertyChanging();
					this._Shipping = value;
					this.SendPropertyChanged("Shipping");
					this.OnShippingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="VarChar(10)")]
		public string Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCCurrency", DbType="VarChar(64)")]
		public string MCCurrency
		{
			get
			{
				return this._MCCurrency;
			}
			set
			{
				if ((this._MCCurrency != value))
				{
					this.OnMCCurrencyChanging(value);
					this.SendPropertyChanging();
					this._MCCurrency = value;
					this.SendPropertyChanged("MCCurrency");
					this.OnMCCurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCFee", DbType="VarChar(10)")]
		public string MCFee
		{
			get
			{
				return this._MCFee;
			}
			set
			{
				if ((this._MCFee != value))
				{
					this.OnMCFeeChanging(value);
					this.SendPropertyChanging();
					this._MCFee = value;
					this.SendPropertyChanged("MCFee");
					this.OnMCFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCGross", DbType="VarChar(10)")]
		public string MCGross
		{
			get
			{
				return this._MCGross;
			}
			set
			{
				if ((this._MCGross != value))
				{
					this.OnMCGrossChanging(value);
					this.SendPropertyChanging();
					this._MCGross = value;
					this.SendPropertyChanged("MCGross");
					this.OnMCGrossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCGross1", DbType="VarChar(10)")]
		public string MCGross1
		{
			get
			{
				return this._MCGross1;
			}
			set
			{
				if ((this._MCGross1 != value))
				{
					this.OnMCGross1Changing(value);
					this.SendPropertyChanging();
					this._MCGross1 = value;
					this.SendPropertyChanged("MCGross1");
					this.OnMCGross1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnType", DbType="VarChar(10)")]
		public string TxnType
		{
			get
			{
				return this._TxnType;
			}
			set
			{
				if ((this._TxnType != value))
				{
					this.OnTxnTypeChanging(value);
					this.SendPropertyChanging();
					this._TxnType = value;
					this.SendPropertyChanged("TxnType");
					this.OnTxnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TxnID", DbType="VarChar(10)")]
		public string TxnID
		{
			get
			{
				return this._TxnID;
			}
			set
			{
				if ((this._TxnID != value))
				{
					this.OnTxnIDChanging(value);
					this.SendPropertyChanging();
					this._TxnID = value;
					this.SendPropertyChanged("TxnID");
					this.OnTxnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NotifyVersion", DbType="VarChar(10)")]
		public string NotifyVersion
		{
			get
			{
				return this._NotifyVersion;
			}
			set
			{
				if ((this._NotifyVersion != value))
				{
					this.OnNotifyVersionChanging(value);
					this.SendPropertyChanging();
					this._NotifyVersion = value;
					this.SendPropertyChanged("NotifyVersion");
					this.OnNotifyVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FraudManagementPendingFilter", DbType="VarChar(5)")]
		public string FraudManagementPendingFilter
		{
			get
			{
				return this._FraudManagementPendingFilter;
			}
			set
			{
				if ((this._FraudManagementPendingFilter != value))
				{
					this.OnFraudManagementPendingFilterChanging(value);
					this.SendPropertyChanging();
					this._FraudManagementPendingFilter = value;
					this.SendPropertyChanged("FraudManagementPendingFilter");
					this.OnFraudManagementPendingFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingReason", DbType="VarChar(64)")]
		public string PendingReason
		{
			get
			{
				return this._PendingReason;
			}
			set
			{
				if ((this._PendingReason != value))
				{
					this.OnPendingReasonChanging(value);
					this.SendPropertyChanging();
					this._PendingReason = value;
					this.SendPropertyChanged("PendingReason");
					this.OnPendingReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProtectionEligibility", DbType="VarChar(64)")]
		public string ProtectionEligibility
		{
			get
			{
				return this._ProtectionEligibility;
			}
			set
			{
				if ((this._ProtectionEligibility != value))
				{
					this.OnProtectionEligibilityChanging(value);
					this.SendPropertyChanging();
					this._ProtectionEligibility = value;
					this.SendPropertyChanged("ProtectionEligibility");
					this.OnProtectionEligibilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonCode", DbType="VarChar(64)")]
		public string ReasonCode
		{
			get
			{
				return this._ReasonCode;
			}
			set
			{
				if ((this._ReasonCode != value))
				{
					this.OnReasonCodeChanging(value);
					this.SendPropertyChanging();
					this._ReasonCode = value;
					this.SendPropertyChanged("ReasonCode");
					this.OnReasonCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentTxnId", DbType="VarChar(19)")]
		public string ParentTxnId
		{
			get
			{
				return this._ParentTxnId;
			}
			set
			{
				if ((this._ParentTxnId != value))
				{
					this.OnParentTxnIdChanging(value);
					this.SendPropertyChanging();
					this._ParentTxnId = value;
					this.SendPropertyChanged("ParentTxnId");
					this.OnParentTxnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="VarChar(28)")]
		public string PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this.OnPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._PaymentDate = value;
					this.SendPropertyChanged("PaymentDate");
					this.OnPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiptID", DbType="VarChar(20)")]
		public string ReceiptID
		{
			get
			{
				return this._ReceiptID;
			}
			set
			{
				if ((this._ReceiptID != value))
				{
					this.OnReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiptID = value;
					this.SendPropertyChanged("ReceiptID");
					this.OnReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Invoice", AutoSync=AutoSync.Always, DbType="VarChar(92)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string Invoice
		{
			get
			{
				return this._Invoice;
			}
			set
			{
				if ((this._Invoice != value))
				{
					this.OnInvoiceChanging(value);
					this.SendPropertyChanging();
					this._Invoice = value;
					this.SendPropertyChanged("Invoice");
					this.OnInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaypalIP", DbType="VarChar(50)")]
		public string PaypalIP
		{
			get
			{
				return this._PaypalIP;
			}
			set
			{
				if ((this._PaypalIP != value))
				{
					this.OnPaypalIPChanging(value);
					this.SendPropertyChanging();
					this._PaypalIP = value;
					this.SendPropertyChanged("PaypalIP");
					this.OnPaypalIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerIP", DbType="VarChar(50)")]
		public string CustomerIP
		{
			get
			{
				return this._CustomerIP;
			}
			set
			{
				if ((this._CustomerIP != value))
				{
					this.OnCustomerIPChanging(value);
					this.SendPropertyChanging();
					this._CustomerIP = value;
					this.SendPropertyChanged("CustomerIP");
					this.OnCustomerIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PromotionCode", DbType="VarChar(64)")]
		public string PromotionCode
		{
			get
			{
				return this._PromotionCode;
			}
			set
			{
				if ((this._PromotionCode != value))
				{
					this.OnPromotionCodeChanging(value);
					this.SendPropertyChanging();
					this._PromotionCode = value;
					this.SendPropertyChanged("PromotionCode");
					this.OnPromotionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverID", DbType="VarChar(64)")]
		public string ReceiverID
		{
			get
			{
				return this._ReceiverID;
			}
			set
			{
				if ((this._ReceiverID != value))
				{
					this.OnReceiverIDChanging(value);
					this.SendPropertyChanging();
					this._ReceiverID = value;
					this.SendPropertyChanged("ReceiverID");
					this.OnReceiverIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblInvoice", Storage="_tblProfile", ThisKey="ProfileID", OtherKey="ID", IsForeignKey=true)]
		public tblProfile tblProfile
		{
			get
			{
				return this._tblProfile.Entity;
			}
			set
			{
				tblProfile previousValue = this._tblProfile.Entity;
				if (((previousValue != value) 
							|| (this._tblProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProfile.Entity = null;
						previousValue.tblInvoices.Remove(this);
					}
					this._tblProfile.Entity = value;
					if ((value != null))
					{
						value.tblInvoices.Add(this);
						this._ProfileID = value.ID;
					}
					else
					{
						this._ProfileID = default(int);
					}
					this.SendPropertyChanged("tblProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlan_tblInvoice", Storage="_tblPlan", ThisKey="PlanID", OtherKey="ID", IsForeignKey=true)]
		public tblPlan tblPlan
		{
			get
			{
				return this._tblPlan.Entity;
			}
			set
			{
				tblPlan previousValue = this._tblPlan.Entity;
				if (((previousValue != value) 
							|| (this._tblPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblPlan.Entity = null;
						previousValue.tblInvoices.Remove(this);
					}
					this._tblPlan.Entity = value;
					if ((value != null))
					{
						value.tblInvoices.Add(this);
						this._PlanID = value.ID;
					}
					else
					{
						this._PlanID = default(int);
					}
					this.SendPropertyChanged("tblPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblInvoice", Storage="_tblCampaign", ThisKey="CampaignID", OtherKey="ID", IsForeignKey=true)]
		public tblCampaign tblCampaign
		{
			get
			{
				return this._tblCampaign.Entity;
			}
			set
			{
				tblCampaign previousValue = this._tblCampaign.Entity;
				if (((previousValue != value) 
							|| (this._tblCampaign.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCampaign.Entity = null;
						previousValue.tblInvoices.Remove(this);
					}
					this._tblCampaign.Entity = value;
					if ((value != null))
					{
						value.tblInvoices.Add(this);
						this._CampaignID = value.ID;
					}
					else
					{
						this._CampaignID = default(int);
					}
					this.SendPropertyChanged("tblCampaign");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPlan")]
	public partial class tblPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PlanDurationUnitTypeID;
		
		private int _PlanTypeID;
		
		private string _Name;
		
		private int _Units;
		
		private decimal _Rate;
		
		private EntitySet<tblInvoice> _tblInvoices;
		
		private EntityRef<tlkpPlanDurationUnitType> _tlkpPlanDurationUnitType;
		
		private EntityRef<tlkpPlanType> _tlkpPlanType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPlanDurationUnitTypeIDChanging(int value);
    partial void OnPlanDurationUnitTypeIDChanged();
    partial void OnPlanTypeIDChanging(int value);
    partial void OnPlanTypeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUnitsChanging(int value);
    partial void OnUnitsChanged();
    partial void OnRateChanging(decimal value);
    partial void OnRateChanged();
    #endregion
		
		public tblPlan()
		{
			this._tblInvoices = new EntitySet<tblInvoice>(new Action<tblInvoice>(this.attach_tblInvoices), new Action<tblInvoice>(this.detach_tblInvoices));
			this._tlkpPlanDurationUnitType = default(EntityRef<tlkpPlanDurationUnitType>);
			this._tlkpPlanType = default(EntityRef<tlkpPlanType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanDurationUnitTypeID", DbType="Int NOT NULL")]
		public int PlanDurationUnitTypeID
		{
			get
			{
				return this._PlanDurationUnitTypeID;
			}
			set
			{
				if ((this._PlanDurationUnitTypeID != value))
				{
					if (this._tlkpPlanDurationUnitType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanDurationUnitTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PlanDurationUnitTypeID = value;
					this.SendPropertyChanged("PlanDurationUnitTypeID");
					this.OnPlanDurationUnitTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlanTypeID", DbType="Int NOT NULL")]
		public int PlanTypeID
		{
			get
			{
				return this._PlanTypeID;
			}
			set
			{
				if ((this._PlanTypeID != value))
				{
					if (this._tlkpPlanType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlanTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PlanTypeID = value;
					this.SendPropertyChanged("PlanTypeID");
					this.OnPlanTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="Int NOT NULL")]
		public int Units
		{
			get
			{
				return this._Units;
			}
			set
			{
				if ((this._Units != value))
				{
					this.OnUnitsChanging(value);
					this.SendPropertyChanging();
					this._Units = value;
					this.SendPropertyChanged("Units");
					this.OnUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rate", DbType="Money NOT NULL")]
		public decimal Rate
		{
			get
			{
				return this._Rate;
			}
			set
			{
				if ((this._Rate != value))
				{
					this.OnRateChanging(value);
					this.SendPropertyChanging();
					this._Rate = value;
					this.SendPropertyChanged("Rate");
					this.OnRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPlan_tblInvoice", Storage="_tblInvoices", ThisKey="ID", OtherKey="PlanID")]
		public EntitySet<tblInvoice> tblInvoices
		{
			get
			{
				return this._tblInvoices;
			}
			set
			{
				this._tblInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPlanDurationUnitType_tblPlan", Storage="_tlkpPlanDurationUnitType", ThisKey="PlanDurationUnitTypeID", OtherKey="ID", IsForeignKey=true)]
		public tlkpPlanDurationUnitType tlkpPlanDurationUnitType
		{
			get
			{
				return this._tlkpPlanDurationUnitType.Entity;
			}
			set
			{
				tlkpPlanDurationUnitType previousValue = this._tlkpPlanDurationUnitType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpPlanDurationUnitType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpPlanDurationUnitType.Entity = null;
						previousValue.tblPlans.Remove(this);
					}
					this._tlkpPlanDurationUnitType.Entity = value;
					if ((value != null))
					{
						value.tblPlans.Add(this);
						this._PlanDurationUnitTypeID = value.ID;
					}
					else
					{
						this._PlanDurationUnitTypeID = default(int);
					}
					this.SendPropertyChanged("tlkpPlanDurationUnitType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPlanType_tblPlan", Storage="_tlkpPlanType", ThisKey="PlanTypeID", OtherKey="ID", IsForeignKey=true)]
		public tlkpPlanType tlkpPlanType
		{
			get
			{
				return this._tlkpPlanType.Entity;
			}
			set
			{
				tlkpPlanType previousValue = this._tlkpPlanType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpPlanType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpPlanType.Entity = null;
						previousValue.tblPlans.Remove(this);
					}
					this._tlkpPlanType.Entity = value;
					if ((value != null))
					{
						value.tblPlans.Add(this);
						this._PlanTypeID = value.ID;
					}
					else
					{
						this._PlanTypeID = default(int);
					}
					this.SendPropertyChanged("tlkpPlanType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblPlan = this;
		}
		
		private void detach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpPlanDurationUnitType")]
	public partial class tlkpPlanDurationUnitType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblPlan> _tblPlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpPlanDurationUnitType()
		{
			this._tblPlans = new EntitySet<tblPlan>(new Action<tblPlan>(this.attach_tblPlans), new Action<tblPlan>(this.detach_tblPlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPlanDurationUnitType_tblPlan", Storage="_tblPlans", ThisKey="ID", OtherKey="PlanDurationUnitTypeID")]
		public EntitySet<tblPlan> tblPlans
		{
			get
			{
				return this._tblPlans;
			}
			set
			{
				this._tblPlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlans(tblPlan entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPlanDurationUnitType = this;
		}
		
		private void detach_tblPlans(tblPlan entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPlanDurationUnitType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpPlanType")]
	public partial class tlkpPlanType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblPlan> _tblPlans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpPlanType()
		{
			this._tblPlans = new EntitySet<tblPlan>(new Action<tblPlan>(this.attach_tblPlans), new Action<tblPlan>(this.detach_tblPlans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPlanType_tblPlan", Storage="_tblPlans", ThisKey="ID", OtherKey="PlanTypeID")]
		public EntitySet<tblPlan> tblPlans
		{
			get
			{
				return this._tblPlans;
			}
			set
			{
				this._tblPlans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPlans(tblPlan entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPlanType = this;
		}
		
		private void detach_tblPlans(tblPlan entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPlanType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpPageContentType")]
	public partial class tlkpPageContentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblPageContent> _tblPageContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpPageContentType()
		{
			this._tblPageContents = new EntitySet<tblPageContent>(new Action<tblPageContent>(this.attach_tblPageContents), new Action<tblPageContent>(this.detach_tblPageContents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPageContentType_tblPageContent", Storage="_tblPageContents", ThisKey="ID", OtherKey="PageContentTypeID")]
		public EntitySet<tblPageContent> tblPageContents
		{
			get
			{
				return this._tblPageContents;
			}
			set
			{
				this._tblPageContents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPageContents(tblPageContent entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPageContentType = this;
		}
		
		private void detach_tblPageContents(tblPageContent entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPageContentType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpPage")]
	public partial class tlkpPage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private EntitySet<tblPageContent> _tblPageContents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpPage()
		{
			this._tblPageContents = new EntitySet<tblPageContent>(new Action<tblPageContent>(this.attach_tblPageContents), new Action<tblPageContent>(this.detach_tblPageContents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPage_tblPageContent", Storage="_tblPageContents", ThisKey="ID", OtherKey="PageID")]
		public EntitySet<tblPageContent> tblPageContents
		{
			get
			{
				return this._tblPageContents;
			}
			set
			{
				this._tblPageContents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblPageContents(tblPageContent entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPage = this;
		}
		
		private void detach_tblPageContents(tblPageContent entity)
		{
			this.SendPropertyChanging();
			entity.tlkpPage = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPageContent")]
	public partial class tblPageContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _PageID;
		
		private int _PageContentTypeID;
		
		private string _PageContent;
		
		private EntityRef<tlkpPage> _tlkpPage;
		
		private EntityRef<tlkpPageContentType> _tlkpPageContentType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(int value);
    partial void OnPageIDChanged();
    partial void OnPageContentTypeIDChanging(int value);
    partial void OnPageContentTypeIDChanged();
    partial void OnPageContentChanging(string value);
    partial void OnPageContentChanged();
    #endregion
		
		public tblPageContent()
		{
			this._tlkpPage = default(EntityRef<tlkpPage>);
			this._tlkpPageContentType = default(EntityRef<tlkpPageContentType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int NOT NULL")]
		public int PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					if (this._tlkpPage.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageContentTypeID", DbType="Int NOT NULL")]
		public int PageContentTypeID
		{
			get
			{
				return this._PageContentTypeID;
			}
			set
			{
				if ((this._PageContentTypeID != value))
				{
					if (this._tlkpPageContentType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPageContentTypeIDChanging(value);
					this.SendPropertyChanging();
					this._PageContentTypeID = value;
					this.SendPropertyChanged("PageContentTypeID");
					this.OnPageContentTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageContent", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string PageContent
		{
			get
			{
				return this._PageContent;
			}
			set
			{
				if ((this._PageContent != value))
				{
					this.OnPageContentChanging(value);
					this.SendPropertyChanging();
					this._PageContent = value;
					this.SendPropertyChanged("PageContent");
					this.OnPageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPage_tblPageContent", Storage="_tlkpPage", ThisKey="PageID", OtherKey="ID", IsForeignKey=true)]
		public tlkpPage tlkpPage
		{
			get
			{
				return this._tlkpPage.Entity;
			}
			set
			{
				tlkpPage previousValue = this._tlkpPage.Entity;
				if (((previousValue != value) 
							|| (this._tlkpPage.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpPage.Entity = null;
						previousValue.tblPageContents.Remove(this);
					}
					this._tlkpPage.Entity = value;
					if ((value != null))
					{
						value.tblPageContents.Add(this);
						this._PageID = value.ID;
					}
					else
					{
						this._PageID = default(int);
					}
					this.SendPropertyChanged("tlkpPage");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpPageContentType_tblPageContent", Storage="_tlkpPageContentType", ThisKey="PageContentTypeID", OtherKey="ID", IsForeignKey=true)]
		public tlkpPageContentType tlkpPageContentType
		{
			get
			{
				return this._tlkpPageContentType.Entity;
			}
			set
			{
				tlkpPageContentType previousValue = this._tlkpPageContentType.Entity;
				if (((previousValue != value) 
							|| (this._tlkpPageContentType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpPageContentType.Entity = null;
						previousValue.tblPageContents.Remove(this);
					}
					this._tlkpPageContentType.Entity = value;
					if ((value != null))
					{
						value.tblPageContents.Add(this);
						this._PageContentTypeID = value.ID;
					}
					else
					{
						this._PageContentTypeID = default(int);
					}
					this.SendPropertyChanged("tlkpPageContentType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUserActivationRequest")]
	public partial class tblUserActivationRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _RequestID;
		
		private string _UserID;
		
		private System.DateTime _ExpirationDate;
		
		private bool _IsFulfilled;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRequestIDChanging(System.Guid value);
    partial void OnRequestIDChanged();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnExpirationDateChanging(System.DateTime value);
    partial void OnExpirationDateChanged();
    partial void OnIsFulfilledChanging(bool value);
    partial void OnIsFulfilledChanged();
    #endregion
		
		public tblUserActivationRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RequestID
		{
			get
			{
				return this._RequestID;
			}
			set
			{
				if ((this._RequestID != value))
				{
					this.OnRequestIDChanging(value);
					this.SendPropertyChanging();
					this._RequestID = value;
					this.SendPropertyChanged("RequestID");
					this.OnRequestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpirationDate", DbType="DateTime NOT NULL")]
		public System.DateTime ExpirationDate
		{
			get
			{
				return this._ExpirationDate;
			}
			set
			{
				if ((this._ExpirationDate != value))
				{
					this.OnExpirationDateChanging(value);
					this.SendPropertyChanging();
					this._ExpirationDate = value;
					this.SendPropertyChanged("ExpirationDate");
					this.OnExpirationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFulfilled", DbType="Bit NOT NULL")]
		public bool IsFulfilled
		{
			get
			{
				return this._IsFulfilled;
			}
			set
			{
				if ((this._IsFulfilled != value))
				{
					this.OnIsFulfilledChanging(value);
					this.SendPropertyChanging();
					this._IsFulfilled = value;
					this.SendPropertyChanged("IsFulfilled");
					this.OnIsFulfilledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmailTemplate")]
	public partial class tblEmailTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TemplateKey;
		
		private string _Template;
		
		private string _Title;
		
		private string _FromEmail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTemplateKeyChanging(string value);
    partial void OnTemplateKeyChanged();
    partial void OnTemplateChanging(string value);
    partial void OnTemplateChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFromEmailChanging(string value);
    partial void OnFromEmailChanged();
    #endregion
		
		public tblEmailTemplate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemplateKey", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string TemplateKey
		{
			get
			{
				return this._TemplateKey;
			}
			set
			{
				if ((this._TemplateKey != value))
				{
					this.OnTemplateKeyChanging(value);
					this.SendPropertyChanging();
					this._TemplateKey = value;
					this.SendPropertyChanged("TemplateKey");
					this.OnTemplateKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Template", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Template
		{
			get
			{
				return this._Template;
			}
			set
			{
				if ((this._Template != value))
				{
					this.OnTemplateChanging(value);
					this.SendPropertyChanging();
					this._Template = value;
					this.SendPropertyChanged("Template");
					this.OnTemplateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(256)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromEmail", DbType="NVarChar(256)")]
		public string FromEmail
		{
			get
			{
				return this._FromEmail;
			}
			set
			{
				if ((this._FromEmail != value))
				{
					this.OnFromEmailChanging(value);
					this.SendPropertyChanging();
					this._FromEmail = value;
					this.SendPropertyChanged("FromEmail");
					this.OnFromEmailChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblPaypalCountry")]
	public partial class tblPaypalCountry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _ISO2;
		
		private string _ISO3;
		
		private short _version;
		
		private EntitySet<tblProfile> _tblProfiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnISO2Changing(string value);
    partial void OnISO2Changed();
    partial void OnISO3Changing(string value);
    partial void OnISO3Changed();
    partial void OnversionChanging(short value);
    partial void OnversionChanged();
    #endregion
		
		public tblPaypalCountry()
		{
			this._tblProfiles = new EntitySet<tblProfile>(new Action<tblProfile>(this.attach_tblProfiles), new Action<tblProfile>(this.detach_tblProfiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO2", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string ISO2
		{
			get
			{
				return this._ISO2;
			}
			set
			{
				if ((this._ISO2 != value))
				{
					this.OnISO2Changing(value);
					this.SendPropertyChanging();
					this._ISO2 = value;
					this.SendPropertyChanged("ISO2");
					this.OnISO2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISO3", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string ISO3
		{
			get
			{
				return this._ISO3;
			}
			set
			{
				if ((this._ISO3 != value))
				{
					this.OnISO3Changing(value);
					this.SendPropertyChanging();
					this._ISO3 = value;
					this.SendPropertyChanged("ISO3");
					this.OnISO3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_version", DbType="SmallInt NOT NULL")]
		public short version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblPaypalCountry_tblProfile", Storage="_tblProfiles", ThisKey="ID", OtherKey="CountryID")]
		public EntitySet<tblProfile> tblProfiles
		{
			get
			{
				return this._tblProfiles;
			}
			set
			{
				this._tblProfiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProfiles(tblProfile entity)
		{
			this.SendPropertyChanging();
			entity.tblPaypalCountry = this;
		}
		
		private void detach_tblProfiles(tblProfile entity)
		{
			this.SendPropertyChanging();
			entity.tblPaypalCountry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tlkpCategory")]
	public partial class tlkpCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ParentID;
		
		private string _Name;
		
		private EntitySet<tblCampaign> _tblCampaigns;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnParentIDChanging(System.Nullable<int> value);
    partial void OnParentIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public tlkpCategory()
		{
			this._tblCampaigns = new EntitySet<tblCampaign>(new Action<tblCampaign>(this.attach_tblCampaigns), new Action<tblCampaign>(this.detach_tblCampaigns));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this.OnParentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentID = value;
					this.SendPropertyChanged("ParentID");
					this.OnParentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCategory_tblCampaign", Storage="_tblCampaigns", ThisKey="ID", OtherKey="CategoryID")]
		public EntitySet<tblCampaign> tblCampaigns
		{
			get
			{
				return this._tblCampaigns;
			}
			set
			{
				this._tblCampaigns.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCategory = this;
		}
		
		private void detach_tblCampaigns(tblCampaign entity)
		{
			this.SendPropertyChanging();
			entity.tlkpCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCampaign")]
	public partial class tblCampaign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ProfileID;
		
		private int _CategoryID;
		
		private int _GeographicScopeID;
		
		private string _Name;
		
		private string _Website;
		
		private string _TargetAudiance;
		
		private string _LongDescription;
		
		private string _MissionStatement;
		
		private string _Title;
		
		private string _Header;
		
		private string _SitemapPath;
		
		private string _CompaignEmail;
		
		private string _CompaignPhone;
		
		private string _CompaignFax;
		
		private System.Nullable<System.DateTime> _LastPaymentDate;
		
		private System.Nullable<System.DateTime> _ExpiryDate;
		
		private System.Nullable<System.DateTime> _LastReviewDate;
		
		private bool _IsPendingSetup;
		
		private bool _IsLive;
		
		private string _GeographicScope;
		
		private System.DateTime _LastUpdated;
		
		private System.DateTime _Created;
		
		private int _AgreementID;
		
		private string _Keywords;
		
		private string _CompanyName;
		
		private EntitySet<tblCampaignConnect> _tblCampaignConnects;
		
		private EntitySet<tblLink> _tblLinks;
		
		private EntitySet<tblProductOrService> _tblProductOrServices;
		
		private EntitySet<tblInvoice> _tblInvoices;
		
		private EntityRef<tblAgreement> _tblAgreement;
		
		private EntityRef<tblProfile> _tblProfile;
		
		private EntityRef<tlkpCategory> _tlkpCategory;
		
		private EntityRef<tlkpGeographicScope> _tlkpGeographicScope;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnProfileIDChanging(int value);
    partial void OnProfileIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnGeographicScopeIDChanging(int value);
    partial void OnGeographicScopeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWebsiteChanging(string value);
    partial void OnWebsiteChanged();
    partial void OnTargetAudianceChanging(string value);
    partial void OnTargetAudianceChanged();
    partial void OnLongDescriptionChanging(string value);
    partial void OnLongDescriptionChanged();
    partial void OnMissionStatementChanging(string value);
    partial void OnMissionStatementChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnHeaderChanging(string value);
    partial void OnHeaderChanged();
    partial void OnSitemapPathChanging(string value);
    partial void OnSitemapPathChanged();
    partial void OnCompaignEmailChanging(string value);
    partial void OnCompaignEmailChanged();
    partial void OnCompaignPhoneChanging(string value);
    partial void OnCompaignPhoneChanged();
    partial void OnCompaignFaxChanging(string value);
    partial void OnCompaignFaxChanged();
    partial void OnLastPaymentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastPaymentDateChanged();
    partial void OnExpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiryDateChanged();
    partial void OnLastReviewDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastReviewDateChanged();
    partial void OnIsPendingSetupChanging(bool value);
    partial void OnIsPendingSetupChanged();
    partial void OnIsLiveChanging(bool value);
    partial void OnIsLiveChanged();
    partial void OnGeographicScopeChanging(string value);
    partial void OnGeographicScopeChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    partial void OnCreatedChanging(System.DateTime value);
    partial void OnCreatedChanged();
    partial void OnAgreementIDChanging(int value);
    partial void OnAgreementIDChanged();
    partial void OnKeywordsChanging(string value);
    partial void OnKeywordsChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    #endregion
		
		public tblCampaign()
		{
			this._tblCampaignConnects = new EntitySet<tblCampaignConnect>(new Action<tblCampaignConnect>(this.attach_tblCampaignConnects), new Action<tblCampaignConnect>(this.detach_tblCampaignConnects));
			this._tblLinks = new EntitySet<tblLink>(new Action<tblLink>(this.attach_tblLinks), new Action<tblLink>(this.detach_tblLinks));
			this._tblProductOrServices = new EntitySet<tblProductOrService>(new Action<tblProductOrService>(this.attach_tblProductOrServices), new Action<tblProductOrService>(this.detach_tblProductOrServices));
			this._tblInvoices = new EntitySet<tblInvoice>(new Action<tblInvoice>(this.attach_tblInvoices), new Action<tblInvoice>(this.detach_tblInvoices));
			this._tblAgreement = default(EntityRef<tblAgreement>);
			this._tblProfile = default(EntityRef<tblProfile>);
			this._tlkpCategory = default(EntityRef<tlkpCategory>);
			this._tlkpGeographicScope = default(EntityRef<tlkpGeographicScope>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfileID", DbType="Int NOT NULL")]
		public int ProfileID
		{
			get
			{
				return this._ProfileID;
			}
			set
			{
				if ((this._ProfileID != value))
				{
					if (this._tblProfile.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProfileIDChanging(value);
					this.SendPropertyChanging();
					this._ProfileID = value;
					this.SendPropertyChanged("ProfileID");
					this.OnProfileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this._tlkpCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicScopeID", DbType="Int NOT NULL")]
		public int GeographicScopeID
		{
			get
			{
				return this._GeographicScopeID;
			}
			set
			{
				if ((this._GeographicScopeID != value))
				{
					if (this._tlkpGeographicScope.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeographicScopeIDChanging(value);
					this.SendPropertyChanging();
					this._GeographicScopeID = value;
					this.SendPropertyChanged("GeographicScopeID");
					this.OnGeographicScopeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Website", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Website
		{
			get
			{
				return this._Website;
			}
			set
			{
				if ((this._Website != value))
				{
					this.OnWebsiteChanging(value);
					this.SendPropertyChanging();
					this._Website = value;
					this.SendPropertyChanged("Website");
					this.OnWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAudiance", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string TargetAudiance
		{
			get
			{
				return this._TargetAudiance;
			}
			set
			{
				if ((this._TargetAudiance != value))
				{
					this.OnTargetAudianceChanging(value);
					this.SendPropertyChanging();
					this._TargetAudiance = value;
					this.SendPropertyChanged("TargetAudiance");
					this.OnTargetAudianceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDescription", DbType="NVarChar(2048) NOT NULL", CanBeNull=false)]
		public string LongDescription
		{
			get
			{
				return this._LongDescription;
			}
			set
			{
				if ((this._LongDescription != value))
				{
					this.OnLongDescriptionChanging(value);
					this.SendPropertyChanging();
					this._LongDescription = value;
					this.SendPropertyChanged("LongDescription");
					this.OnLongDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MissionStatement", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string MissionStatement
		{
			get
			{
				return this._MissionStatement;
			}
			set
			{
				if ((this._MissionStatement != value))
				{
					this.OnMissionStatementChanging(value);
					this.SendPropertyChanging();
					this._MissionStatement = value;
					this.SendPropertyChanged("MissionStatement");
					this.OnMissionStatementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(69) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Header
		{
			get
			{
				return this._Header;
			}
			set
			{
				if ((this._Header != value))
				{
					this.OnHeaderChanging(value);
					this.SendPropertyChanging();
					this._Header = value;
					this.SendPropertyChanged("Header");
					this.OnHeaderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SitemapPath", DbType="NVarChar(256)")]
		public string SitemapPath
		{
			get
			{
				return this._SitemapPath;
			}
			set
			{
				if ((this._SitemapPath != value))
				{
					this.OnSitemapPathChanging(value);
					this.SendPropertyChanging();
					this._SitemapPath = value;
					this.SendPropertyChanged("SitemapPath");
					this.OnSitemapPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignEmail", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string CompaignEmail
		{
			get
			{
				return this._CompaignEmail;
			}
			set
			{
				if ((this._CompaignEmail != value))
				{
					this.OnCompaignEmailChanging(value);
					this.SendPropertyChanging();
					this._CompaignEmail = value;
					this.SendPropertyChanged("CompaignEmail");
					this.OnCompaignEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignPhone", DbType="NVarChar(14)")]
		public string CompaignPhone
		{
			get
			{
				return this._CompaignPhone;
			}
			set
			{
				if ((this._CompaignPhone != value))
				{
					this.OnCompaignPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompaignPhone = value;
					this.SendPropertyChanged("CompaignPhone");
					this.OnCompaignPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompaignFax", DbType="NVarChar(14)")]
		public string CompaignFax
		{
			get
			{
				return this._CompaignFax;
			}
			set
			{
				if ((this._CompaignFax != value))
				{
					this.OnCompaignFaxChanging(value);
					this.SendPropertyChanging();
					this._CompaignFax = value;
					this.SendPropertyChanged("CompaignFax");
					this.OnCompaignFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPaymentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastPaymentDate
		{
			get
			{
				return this._LastPaymentDate;
			}
			set
			{
				if ((this._LastPaymentDate != value))
				{
					this.OnLastPaymentDateChanging(value);
					this.SendPropertyChanging();
					this._LastPaymentDate = value;
					this.SendPropertyChanged("LastPaymentDate");
					this.OnLastPaymentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiryDate
		{
			get
			{
				return this._ExpiryDate;
			}
			set
			{
				if ((this._ExpiryDate != value))
				{
					this.OnExpiryDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiryDate = value;
					this.SendPropertyChanged("ExpiryDate");
					this.OnExpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastReviewDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastReviewDate
		{
			get
			{
				return this._LastReviewDate;
			}
			set
			{
				if ((this._LastReviewDate != value))
				{
					this.OnLastReviewDateChanging(value);
					this.SendPropertyChanging();
					this._LastReviewDate = value;
					this.SendPropertyChanged("LastReviewDate");
					this.OnLastReviewDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPendingSetup", DbType="Bit NOT NULL")]
		public bool IsPendingSetup
		{
			get
			{
				return this._IsPendingSetup;
			}
			set
			{
				if ((this._IsPendingSetup != value))
				{
					this.OnIsPendingSetupChanging(value);
					this.SendPropertyChanging();
					this._IsPendingSetup = value;
					this.SendPropertyChanged("IsPendingSetup");
					this.OnIsPendingSetupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLive", DbType="Bit NOT NULL")]
		public bool IsLive
		{
			get
			{
				return this._IsLive;
			}
			set
			{
				if ((this._IsLive != value))
				{
					this.OnIsLiveChanging(value);
					this.SendPropertyChanging();
					this._IsLive = value;
					this.SendPropertyChanged("IsLive");
					this.OnIsLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeographicScope", DbType="NVarChar(2048)")]
		public string GeographicScope
		{
			get
			{
				return this._GeographicScope;
			}
			set
			{
				if ((this._GeographicScope != value))
				{
					this.OnGeographicScopeChanging(value);
					this.SendPropertyChanging();
					this._GeographicScope = value;
					this.SendPropertyChanged("GeographicScope");
					this.OnGeographicScopeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created", DbType="DateTime NOT NULL")]
		public System.DateTime Created
		{
			get
			{
				return this._Created;
			}
			set
			{
				if ((this._Created != value))
				{
					this.OnCreatedChanging(value);
					this.SendPropertyChanging();
					this._Created = value;
					this.SendPropertyChanged("Created");
					this.OnCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreementID", DbType="Int NOT NULL")]
		public int AgreementID
		{
			get
			{
				return this._AgreementID;
			}
			set
			{
				if ((this._AgreementID != value))
				{
					if (this._tblAgreement.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAgreementIDChanging(value);
					this.SendPropertyChanging();
					this._AgreementID = value;
					this.SendPropertyChanged("AgreementID");
					this.OnAgreementIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Keywords", DbType="NVarChar(1024) NOT NULL", CanBeNull=false)]
		public string Keywords
		{
			get
			{
				return this._Keywords;
			}
			set
			{
				if ((this._Keywords != value))
				{
					this.OnKeywordsChanging(value);
					this.SendPropertyChanging();
					this._Keywords = value;
					this.SendPropertyChanged("Keywords");
					this.OnKeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(128)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblCampaignConnect", Storage="_tblCampaignConnects", ThisKey="ID", OtherKey="CampaignID")]
		public EntitySet<tblCampaignConnect> tblCampaignConnects
		{
			get
			{
				return this._tblCampaignConnects;
			}
			set
			{
				this._tblCampaignConnects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblLink", Storage="_tblLinks", ThisKey="ID", OtherKey="CampaignID")]
		public EntitySet<tblLink> tblLinks
		{
			get
			{
				return this._tblLinks;
			}
			set
			{
				this._tblLinks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblProductOrService", Storage="_tblProductOrServices", ThisKey="ID", OtherKey="CampaignID")]
		public EntitySet<tblProductOrService> tblProductOrServices
		{
			get
			{
				return this._tblProductOrServices;
			}
			set
			{
				this._tblProductOrServices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCampaign_tblInvoice", Storage="_tblInvoices", ThisKey="ID", OtherKey="CampaignID")]
		public EntitySet<tblInvoice> tblInvoices
		{
			get
			{
				return this._tblInvoices;
			}
			set
			{
				this._tblInvoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblAgreement_tblCampaign", Storage="_tblAgreement", ThisKey="AgreementID", OtherKey="ID", IsForeignKey=true)]
		public tblAgreement tblAgreement
		{
			get
			{
				return this._tblAgreement.Entity;
			}
			set
			{
				tblAgreement previousValue = this._tblAgreement.Entity;
				if (((previousValue != value) 
							|| (this._tblAgreement.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblAgreement.Entity = null;
						previousValue.tblCampaigns.Remove(this);
					}
					this._tblAgreement.Entity = value;
					if ((value != null))
					{
						value.tblCampaigns.Add(this);
						this._AgreementID = value.ID;
					}
					else
					{
						this._AgreementID = default(int);
					}
					this.SendPropertyChanged("tblAgreement");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProfile_tblCampaign", Storage="_tblProfile", ThisKey="ProfileID", OtherKey="ID", IsForeignKey=true)]
		public tblProfile tblProfile
		{
			get
			{
				return this._tblProfile.Entity;
			}
			set
			{
				tblProfile previousValue = this._tblProfile.Entity;
				if (((previousValue != value) 
							|| (this._tblProfile.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProfile.Entity = null;
						previousValue.tblCampaigns.Remove(this);
					}
					this._tblProfile.Entity = value;
					if ((value != null))
					{
						value.tblCampaigns.Add(this);
						this._ProfileID = value.ID;
					}
					else
					{
						this._ProfileID = default(int);
					}
					this.SendPropertyChanged("tblProfile");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpCategory_tblCampaign", Storage="_tlkpCategory", ThisKey="CategoryID", OtherKey="ID", IsForeignKey=true)]
		public tlkpCategory tlkpCategory
		{
			get
			{
				return this._tlkpCategory.Entity;
			}
			set
			{
				tlkpCategory previousValue = this._tlkpCategory.Entity;
				if (((previousValue != value) 
							|| (this._tlkpCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpCategory.Entity = null;
						previousValue.tblCampaigns.Remove(this);
					}
					this._tlkpCategory.Entity = value;
					if ((value != null))
					{
						value.tblCampaigns.Add(this);
						this._CategoryID = value.ID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("tlkpCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tlkpGeographicScope_tblCampaign", Storage="_tlkpGeographicScope", ThisKey="GeographicScopeID", OtherKey="ID", IsForeignKey=true)]
		public tlkpGeographicScope tlkpGeographicScope
		{
			get
			{
				return this._tlkpGeographicScope.Entity;
			}
			set
			{
				tlkpGeographicScope previousValue = this._tlkpGeographicScope.Entity;
				if (((previousValue != value) 
							|| (this._tlkpGeographicScope.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tlkpGeographicScope.Entity = null;
						previousValue.tblCampaigns.Remove(this);
					}
					this._tlkpGeographicScope.Entity = value;
					if ((value != null))
					{
						value.tblCampaigns.Add(this);
						this._GeographicScopeID = value.ID;
					}
					else
					{
						this._GeographicScopeID = default(int);
					}
					this.SendPropertyChanged("tlkpGeographicScope");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblCampaignConnects(tblCampaignConnect entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = this;
		}
		
		private void detach_tblCampaignConnects(tblCampaignConnect entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = null;
		}
		
		private void attach_tblLinks(tblLink entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = this;
		}
		
		private void detach_tblLinks(tblLink entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = null;
		}
		
		private void attach_tblProductOrServices(tblProductOrService entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = this;
		}
		
		private void detach_tblProductOrServices(tblProductOrService entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = null;
		}
		
		private void attach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = this;
		}
		
		private void detach_tblInvoices(tblInvoice entity)
		{
			this.SendPropertyChanging();
			entity.tblCampaign = null;
		}
	}
}
#pragma warning restore 1591
