#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocumentListAPI
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GoogleDocsTest")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Backup(tbl_Backup instance);
    partial void Updatetbl_Backup(tbl_Backup instance);
    partial void Deletetbl_Backup(tbl_Backup instance);
    partial void Inserttbl_Doc(tbl_Doc instance);
    partial void Updatetbl_Doc(tbl_Doc instance);
    partial void Deletetbl_Doc(tbl_Doc instance);
    partial void Inserttbl_Permission(tbl_Permission instance);
    partial void Updatetbl_Permission(tbl_Permission instance);
    partial void Deletetbl_Permission(tbl_Permission instance);
    partial void Inserttbl_User(tbl_User instance);
    partial void Updatetbl_User(tbl_User instance);
    partial void Deletetbl_User(tbl_User instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["GoogleDocsTestConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Backup> tbl_Backups
		{
			get
			{
				return this.GetTable<tbl_Backup>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Doc> tbl_Docs
		{
			get
			{
				return this.GetTable<tbl_Doc>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Permission> tbl_Permissions
		{
			get
			{
				return this.GetTable<tbl_Permission>();
			}
		}
		
		public System.Data.Linq.Table<tbl_User> tbl_Users
		{
			get
			{
				return this.GetTable<tbl_User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Backup")]
	public partial class tbl_Backup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BackupID;
		
		private int _DocID;
		
		private string _Path;
		
		private EntityRef<tbl_Doc> _tbl_Doc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBackupIDChanging(int value);
    partial void OnBackupIDChanged();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    #endregion
		
		public tbl_Backup()
		{
			this._tbl_Doc = default(EntityRef<tbl_Doc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BackupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int BackupID
		{
			get
			{
				return this._BackupID;
			}
			set
			{
				if ((this._BackupID != value))
				{
					this.OnBackupIDChanging(value);
					this.SendPropertyChanging();
					this._BackupID = value;
					this.SendPropertyChanged("BackupID");
					this.OnBackupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL")]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._tbl_Doc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Path
		{
			get
			{
				return this._Path;
			}
			set
			{
				if ((this._Path != value))
				{
					this.OnPathChanging(value);
					this.SendPropertyChanging();
					this._Path = value;
					this.SendPropertyChanged("Path");
					this.OnPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Doc_tbl_Backup", Storage="_tbl_Doc", ThisKey="DocID", OtherKey="ID", IsForeignKey=true)]
		public tbl_Doc tbl_Doc
		{
			get
			{
				return this._tbl_Doc.Entity;
			}
			set
			{
				tbl_Doc previousValue = this._tbl_Doc.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Doc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Doc.Entity = null;
						previousValue.tbl_Backups.Remove(this);
					}
					this._tbl_Doc.Entity = value;
					if ((value != null))
					{
						value.tbl_Backups.Add(this);
						this._DocID = value.ID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("tbl_Doc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Docs")]
	public partial class tbl_Doc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DocID;
		
		private string _Title;
		
		private string _OwnerID;
		
		private string _DocPath;
		
		private System.Nullable<bool> _IsShared;
		
		private System.Nullable<bool> _IsSharedOutside;
		
		private System.Nullable<bool> _IsSharedOrgWide;
		
		private string _ACL;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _LastUpdatedBy;
		
		private string _FilePath;
		
		private string _MimeType;
		
		private System.DateTime _CreationDate;
		
		private string _WebContentLink;
		
		private string _WebViewLink;
		
		private System.Nullable<bool> _IsWritersCanShare;
		
		private string _ThumbnailLink;
		
		private string _QuotaBytesUsed;
		
		private string _Parents;
		
		private string _Owners;
		
		private string _OrignalFileName;
		
		private string _IconLink;
		
		private string _FileSize;
		
		private string _FileExtension;
		
		private string _ExportableLinks;
		
		private System.Nullable<bool> _ExplicitlyTrashed;
		
		private string _ETag;
		
		private string _EmbedLink;
		
		private System.Nullable<bool> _Editable;
		
		private string _DownloadUrl;
		
		private System.Nullable<bool> _AppDataContent;
		
		private string _AlternateLink;
		
		private string _Kind;
		
		private string _PermissionListID;
		
		private EntitySet<tbl_Backup> _tbl_Backups;
		
		private EntitySet<tbl_Permission> _tbl_Permissions;
		
		private EntityRef<tbl_User> _tbl_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocIDChanging(string value);
    partial void OnDocIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnOwnerIDChanging(string value);
    partial void OnOwnerIDChanged();
    partial void OnDocPathChanging(string value);
    partial void OnDocPathChanged();
    partial void OnIsSharedChanging(System.Nullable<bool> value);
    partial void OnIsSharedChanged();
    partial void OnIsSharedOutsideChanging(System.Nullable<bool> value);
    partial void OnIsSharedOutsideChanged();
    partial void OnIsSharedOrgWideChanging(System.Nullable<bool> value);
    partial void OnIsSharedOrgWideChanged();
    partial void OnACLChanging(string value);
    partial void OnACLChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnLastUpdatedByChanging(string value);
    partial void OnLastUpdatedByChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnMimeTypeChanging(string value);
    partial void OnMimeTypeChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    partial void OnWebContentLinkChanging(string value);
    partial void OnWebContentLinkChanged();
    partial void OnWebViewLinkChanging(string value);
    partial void OnWebViewLinkChanged();
    partial void OnIsWritersCanShareChanging(System.Nullable<bool> value);
    partial void OnIsWritersCanShareChanged();
    partial void OnThumbnailLinkChanging(string value);
    partial void OnThumbnailLinkChanged();
    partial void OnQuotaBytesUsedChanging(string value);
    partial void OnQuotaBytesUsedChanged();
    partial void OnParentsChanging(string value);
    partial void OnParentsChanged();
    partial void OnOwnersChanging(string value);
    partial void OnOwnersChanged();
    partial void OnOrignalFileNameChanging(string value);
    partial void OnOrignalFileNameChanged();
    partial void OnIconLinkChanging(string value);
    partial void OnIconLinkChanged();
    partial void OnFileSizeChanging(string value);
    partial void OnFileSizeChanged();
    partial void OnFileExtensionChanging(string value);
    partial void OnFileExtensionChanged();
    partial void OnExportableLinksChanging(string value);
    partial void OnExportableLinksChanged();
    partial void OnExplicitlyTrashedChanging(System.Nullable<bool> value);
    partial void OnExplicitlyTrashedChanged();
    partial void OnETagChanging(string value);
    partial void OnETagChanged();
    partial void OnEmbedLinkChanging(string value);
    partial void OnEmbedLinkChanged();
    partial void OnEditableChanging(System.Nullable<bool> value);
    partial void OnEditableChanged();
    partial void OnDownloadUrlChanging(string value);
    partial void OnDownloadUrlChanged();
    partial void OnAppDataContentChanging(System.Nullable<bool> value);
    partial void OnAppDataContentChanged();
    partial void OnAlternateLinkChanging(string value);
    partial void OnAlternateLinkChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnPermissionListIDChanging(string value);
    partial void OnPermissionListIDChanged();
    #endregion
		
		public tbl_Doc()
		{
			this._tbl_Backups = new EntitySet<tbl_Backup>(new Action<tbl_Backup>(this.attach_tbl_Backups), new Action<tbl_Backup>(this.detach_tbl_Backups));
			this._tbl_Permissions = new EntitySet<tbl_Permission>(new Action<tbl_Permission>(this.attach_tbl_Permissions), new Action<tbl_Permission>(this.detach_tbl_Permissions));
			this._tbl_User = default(EntityRef<tbl_User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(1024)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="VarChar(256)")]
		public string OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					if (this._tbl_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocPath", DbType="VarChar(1024)")]
		public string DocPath
		{
			get
			{
				return this._DocPath;
			}
			set
			{
				if ((this._DocPath != value))
				{
					this.OnDocPathChanging(value);
					this.SendPropertyChanging();
					this._DocPath = value;
					this.SendPropertyChanged("DocPath");
					this.OnDocPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsShared", DbType="Bit")]
		public System.Nullable<bool> IsShared
		{
			get
			{
				return this._IsShared;
			}
			set
			{
				if ((this._IsShared != value))
				{
					this.OnIsSharedChanging(value);
					this.SendPropertyChanging();
					this._IsShared = value;
					this.SendPropertyChanged("IsShared");
					this.OnIsSharedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSharedOutside", DbType="Bit")]
		public System.Nullable<bool> IsSharedOutside
		{
			get
			{
				return this._IsSharedOutside;
			}
			set
			{
				if ((this._IsSharedOutside != value))
				{
					this.OnIsSharedOutsideChanging(value);
					this.SendPropertyChanging();
					this._IsSharedOutside = value;
					this.SendPropertyChanged("IsSharedOutside");
					this.OnIsSharedOutsideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSharedOrgWide", DbType="Bit")]
		public System.Nullable<bool> IsSharedOrgWide
		{
			get
			{
				return this._IsSharedOrgWide;
			}
			set
			{
				if ((this._IsSharedOrgWide != value))
				{
					this.OnIsSharedOrgWideChanging(value);
					this.SendPropertyChanging();
					this._IsSharedOrgWide = value;
					this.SendPropertyChanged("IsSharedOrgWide");
					this.OnIsSharedOrgWideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACL", DbType="NVarChar(MAX)")]
		public string ACL
		{
			get
			{
				return this._ACL;
			}
			set
			{
				if ((this._ACL != value))
				{
					this.OnACLChanging(value);
					this.SendPropertyChanging();
					this._ACL = value;
					this.SendPropertyChanged("ACL");
					this.OnACLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="VarChar(128)")]
		public string LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(1024)")]
		public string FilePath
		{
			get
			{
				return this._FilePath;
			}
			set
			{
				if ((this._FilePath != value))
				{
					this.OnFilePathChanging(value);
					this.SendPropertyChanging();
					this._FilePath = value;
					this.SendPropertyChanged("FilePath");
					this.OnFilePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MimeType", DbType="VarChar(256)")]
		public string MimeType
		{
			get
			{
				return this._MimeType;
			}
			set
			{
				if ((this._MimeType != value))
				{
					this.OnMimeTypeChanging(value);
					this.SendPropertyChanging();
					this._MimeType = value;
					this.SendPropertyChanged("MimeType");
					this.OnMimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebContentLink", DbType="VarChar(1024)")]
		public string WebContentLink
		{
			get
			{
				return this._WebContentLink;
			}
			set
			{
				if ((this._WebContentLink != value))
				{
					this.OnWebContentLinkChanging(value);
					this.SendPropertyChanging();
					this._WebContentLink = value;
					this.SendPropertyChanged("WebContentLink");
					this.OnWebContentLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WebViewLink", DbType="VarChar(1024)")]
		public string WebViewLink
		{
			get
			{
				return this._WebViewLink;
			}
			set
			{
				if ((this._WebViewLink != value))
				{
					this.OnWebViewLinkChanging(value);
					this.SendPropertyChanging();
					this._WebViewLink = value;
					this.SendPropertyChanged("WebViewLink");
					this.OnWebViewLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWritersCanShare", DbType="Bit")]
		public System.Nullable<bool> IsWritersCanShare
		{
			get
			{
				return this._IsWritersCanShare;
			}
			set
			{
				if ((this._IsWritersCanShare != value))
				{
					this.OnIsWritersCanShareChanging(value);
					this.SendPropertyChanging();
					this._IsWritersCanShare = value;
					this.SendPropertyChanged("IsWritersCanShare");
					this.OnIsWritersCanShareChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbnailLink", DbType="VarChar(1024)")]
		public string ThumbnailLink
		{
			get
			{
				return this._ThumbnailLink;
			}
			set
			{
				if ((this._ThumbnailLink != value))
				{
					this.OnThumbnailLinkChanging(value);
					this.SendPropertyChanging();
					this._ThumbnailLink = value;
					this.SendPropertyChanged("ThumbnailLink");
					this.OnThumbnailLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaBytesUsed", DbType="VarChar(64)")]
		public string QuotaBytesUsed
		{
			get
			{
				return this._QuotaBytesUsed;
			}
			set
			{
				if ((this._QuotaBytesUsed != value))
				{
					this.OnQuotaBytesUsedChanging(value);
					this.SendPropertyChanging();
					this._QuotaBytesUsed = value;
					this.SendPropertyChanged("QuotaBytesUsed");
					this.OnQuotaBytesUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parents", DbType="VarChar(1024)")]
		public string Parents
		{
			get
			{
				return this._Parents;
			}
			set
			{
				if ((this._Parents != value))
				{
					this.OnParentsChanging(value);
					this.SendPropertyChanging();
					this._Parents = value;
					this.SendPropertyChanged("Parents");
					this.OnParentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Owners", DbType="VarChar(1024)")]
		public string Owners
		{
			get
			{
				return this._Owners;
			}
			set
			{
				if ((this._Owners != value))
				{
					this.OnOwnersChanging(value);
					this.SendPropertyChanging();
					this._Owners = value;
					this.SendPropertyChanged("Owners");
					this.OnOwnersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrignalFileName", DbType="VarChar(1024)")]
		public string OrignalFileName
		{
			get
			{
				return this._OrignalFileName;
			}
			set
			{
				if ((this._OrignalFileName != value))
				{
					this.OnOrignalFileNameChanging(value);
					this.SendPropertyChanging();
					this._OrignalFileName = value;
					this.SendPropertyChanged("OrignalFileName");
					this.OnOrignalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IconLink", DbType="VarChar(1024)")]
		public string IconLink
		{
			get
			{
				return this._IconLink;
			}
			set
			{
				if ((this._IconLink != value))
				{
					this.OnIconLinkChanging(value);
					this.SendPropertyChanging();
					this._IconLink = value;
					this.SendPropertyChanged("IconLink");
					this.OnIconLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileSize", DbType="VarChar(1024)")]
		public string FileSize
		{
			get
			{
				return this._FileSize;
			}
			set
			{
				if ((this._FileSize != value))
				{
					this.OnFileSizeChanging(value);
					this.SendPropertyChanging();
					this._FileSize = value;
					this.SendPropertyChanged("FileSize");
					this.OnFileSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileExtension", DbType="VarChar(64)")]
		public string FileExtension
		{
			get
			{
				return this._FileExtension;
			}
			set
			{
				if ((this._FileExtension != value))
				{
					this.OnFileExtensionChanging(value);
					this.SendPropertyChanging();
					this._FileExtension = value;
					this.SendPropertyChanged("FileExtension");
					this.OnFileExtensionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExportableLinks", DbType="VarChar(1024)")]
		public string ExportableLinks
		{
			get
			{
				return this._ExportableLinks;
			}
			set
			{
				if ((this._ExportableLinks != value))
				{
					this.OnExportableLinksChanging(value);
					this.SendPropertyChanging();
					this._ExportableLinks = value;
					this.SendPropertyChanged("ExportableLinks");
					this.OnExportableLinksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExplicitlyTrashed", DbType="Bit")]
		public System.Nullable<bool> ExplicitlyTrashed
		{
			get
			{
				return this._ExplicitlyTrashed;
			}
			set
			{
				if ((this._ExplicitlyTrashed != value))
				{
					this.OnExplicitlyTrashedChanging(value);
					this.SendPropertyChanging();
					this._ExplicitlyTrashed = value;
					this.SendPropertyChanged("ExplicitlyTrashed");
					this.OnExplicitlyTrashedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETag", DbType="VarChar(1024)")]
		public string ETag
		{
			get
			{
				return this._ETag;
			}
			set
			{
				if ((this._ETag != value))
				{
					this.OnETagChanging(value);
					this.SendPropertyChanging();
					this._ETag = value;
					this.SendPropertyChanged("ETag");
					this.OnETagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmbedLink", DbType="VarChar(1024)")]
		public string EmbedLink
		{
			get
			{
				return this._EmbedLink;
			}
			set
			{
				if ((this._EmbedLink != value))
				{
					this.OnEmbedLinkChanging(value);
					this.SendPropertyChanging();
					this._EmbedLink = value;
					this.SendPropertyChanged("EmbedLink");
					this.OnEmbedLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Editable", DbType="Bit")]
		public System.Nullable<bool> Editable
		{
			get
			{
				return this._Editable;
			}
			set
			{
				if ((this._Editable != value))
				{
					this.OnEditableChanging(value);
					this.SendPropertyChanging();
					this._Editable = value;
					this.SendPropertyChanged("Editable");
					this.OnEditableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DownloadUrl", DbType="VarChar(1024)")]
		public string DownloadUrl
		{
			get
			{
				return this._DownloadUrl;
			}
			set
			{
				if ((this._DownloadUrl != value))
				{
					this.OnDownloadUrlChanging(value);
					this.SendPropertyChanging();
					this._DownloadUrl = value;
					this.SendPropertyChanged("DownloadUrl");
					this.OnDownloadUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppDataContent", DbType="Bit")]
		public System.Nullable<bool> AppDataContent
		{
			get
			{
				return this._AppDataContent;
			}
			set
			{
				if ((this._AppDataContent != value))
				{
					this.OnAppDataContentChanging(value);
					this.SendPropertyChanging();
					this._AppDataContent = value;
					this.SendPropertyChanged("AppDataContent");
					this.OnAppDataContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlternateLink", DbType="VarChar(1024)")]
		public string AlternateLink
		{
			get
			{
				return this._AlternateLink;
			}
			set
			{
				if ((this._AlternateLink != value))
				{
					this.OnAlternateLinkChanging(value);
					this.SendPropertyChanging();
					this._AlternateLink = value;
					this.SendPropertyChanged("AlternateLink");
					this.OnAlternateLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(64)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionListID", DbType="VarChar(128)")]
		public string PermissionListID
		{
			get
			{
				return this._PermissionListID;
			}
			set
			{
				if ((this._PermissionListID != value))
				{
					this.OnPermissionListIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionListID = value;
					this.SendPropertyChanged("PermissionListID");
					this.OnPermissionListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Doc_tbl_Backup", Storage="_tbl_Backups", ThisKey="ID", OtherKey="DocID")]
		public EntitySet<tbl_Backup> tbl_Backups
		{
			get
			{
				return this._tbl_Backups;
			}
			set
			{
				this._tbl_Backups.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Doc_tbl_Permission", Storage="_tbl_Permissions", ThisKey="ID", OtherKey="DocID")]
		public EntitySet<tbl_Permission> tbl_Permissions
		{
			get
			{
				return this._tbl_Permissions;
			}
			set
			{
				this._tbl_Permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Doc", Storage="_tbl_User", ThisKey="OwnerID", OtherKey="UserID", IsForeignKey=true)]
		public tbl_User tbl_User
		{
			get
			{
				return this._tbl_User.Entity;
			}
			set
			{
				tbl_User previousValue = this._tbl_User.Entity;
				if (((previousValue != value) 
							|| (this._tbl_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_User.Entity = null;
						previousValue.tbl_Docs.Remove(this);
					}
					this._tbl_User.Entity = value;
					if ((value != null))
					{
						value.tbl_Docs.Add(this);
						this._OwnerID = value.UserID;
					}
					else
					{
						this._OwnerID = default(string);
					}
					this.SendPropertyChanged("tbl_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Backups(tbl_Backup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Doc = this;
		}
		
		private void detach_tbl_Backups(tbl_Backup entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Doc = null;
		}
		
		private void attach_tbl_Permissions(tbl_Permission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Doc = this;
		}
		
		private void detach_tbl_Permissions(tbl_Permission entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Doc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Permissions")]
	public partial class tbl_Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _DocID;
		
		private string _AdditionalRoles;
		
		private string _AuthKey;
		
		private string _ETag;
		
		private string _PermissionID;
		
		private string _Kind;
		
		private string _Name;
		
		private string _PhotoLink;
		
		private string _Role;
		
		private string _SelfLink;
		
		private string _Type;
		
		private string _Value;
		
		private string _WithLink;
		
		private EntityRef<tbl_Doc> _tbl_Doc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocIDChanging(int value);
    partial void OnDocIDChanged();
    partial void OnAdditionalRolesChanging(string value);
    partial void OnAdditionalRolesChanged();
    partial void OnAuthKeyChanging(string value);
    partial void OnAuthKeyChanged();
    partial void OnETagChanging(string value);
    partial void OnETagChanged();
    partial void OnPermissionIDChanging(string value);
    partial void OnPermissionIDChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhotoLinkChanging(string value);
    partial void OnPhotoLinkChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    partial void OnSelfLinkChanging(string value);
    partial void OnSelfLinkChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnWithLinkChanging(string value);
    partial void OnWithLinkChanged();
    #endregion
		
		public tbl_Permission()
		{
			this._tbl_Doc = default(EntityRef<tbl_Doc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocID", DbType="Int NOT NULL")]
		public int DocID
		{
			get
			{
				return this._DocID;
			}
			set
			{
				if ((this._DocID != value))
				{
					if (this._tbl_Doc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDocIDChanging(value);
					this.SendPropertyChanging();
					this._DocID = value;
					this.SendPropertyChanged("DocID");
					this.OnDocIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdditionalRoles", DbType="VarChar(1024)")]
		public string AdditionalRoles
		{
			get
			{
				return this._AdditionalRoles;
			}
			set
			{
				if ((this._AdditionalRoles != value))
				{
					this.OnAdditionalRolesChanging(value);
					this.SendPropertyChanging();
					this._AdditionalRoles = value;
					this.SendPropertyChanged("AdditionalRoles");
					this.OnAdditionalRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthKey", DbType="VarChar(1024)")]
		public string AuthKey
		{
			get
			{
				return this._AuthKey;
			}
			set
			{
				if ((this._AuthKey != value))
				{
					this.OnAuthKeyChanging(value);
					this.SendPropertyChanging();
					this._AuthKey = value;
					this.SendPropertyChanged("AuthKey");
					this.OnAuthKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETag", DbType="VarChar(1024)")]
		public string ETag
		{
			get
			{
				return this._ETag;
			}
			set
			{
				if ((this._ETag != value))
				{
					this.OnETagChanging(value);
					this.SendPropertyChanging();
					this._ETag = value;
					this.SendPropertyChanged("ETag");
					this.OnETagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="VarChar(64)")]
		public string PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(64)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(128)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoLink", DbType="VarChar(1024)")]
		public string PhotoLink
		{
			get
			{
				return this._PhotoLink;
			}
			set
			{
				if ((this._PhotoLink != value))
				{
					this.OnPhotoLinkChanging(value);
					this.SendPropertyChanging();
					this._PhotoLink = value;
					this.SendPropertyChanged("PhotoLink");
					this.OnPhotoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="VarChar(1024)")]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SelfLink", DbType="VarChar(1024)")]
		public string SelfLink
		{
			get
			{
				return this._SelfLink;
			}
			set
			{
				if ((this._SelfLink != value))
				{
					this.OnSelfLinkChanging(value);
					this.SendPropertyChanging();
					this._SelfLink = value;
					this.SendPropertyChanged("SelfLink");
					this.OnSelfLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(64)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="VarChar(1024)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WithLink", DbType="VarChar(1024)")]
		public string WithLink
		{
			get
			{
				return this._WithLink;
			}
			set
			{
				if ((this._WithLink != value))
				{
					this.OnWithLinkChanging(value);
					this.SendPropertyChanging();
					this._WithLink = value;
					this.SendPropertyChanged("WithLink");
					this.OnWithLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Doc_tbl_Permission", Storage="_tbl_Doc", ThisKey="DocID", OtherKey="ID", IsForeignKey=true)]
		public tbl_Doc tbl_Doc
		{
			get
			{
				return this._tbl_Doc.Entity;
			}
			set
			{
				tbl_Doc previousValue = this._tbl_Doc.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Doc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Doc.Entity = null;
						previousValue.tbl_Permissions.Remove(this);
					}
					this._tbl_Doc.Entity = value;
					if ((value != null))
					{
						value.tbl_Permissions.Add(this);
						this._DocID = value.ID;
					}
					else
					{
						this._DocID = default(int);
					}
					this.SendPropertyChanged("tbl_Doc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Users")]
	public partial class tbl_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _Email;
		
		private bool _IsEnabled;
		
		private bool _IsStudent;
		
		private System.DateTime _LastUpdated;
		
		private string _DomainSharingPolicy;
		
		private string _ETag;
		
		private System.Nullable<bool> _IsCurrentAppInstalled;
		
		private string _Kind;
		
		private string _LargestChangeID;
		
		private string _Name;
		
		private string _PermissionID;
		
		private string _QuotaBytesTotal;
		
		private string _QuotaBytesUsed;
		
		private string _QuotaBytesUsedAggregate;
		
		private string _QuotaBytesUsedInTrash;
		
		private string _RootFolderID;
		
		private EntitySet<tbl_Doc> _tbl_Docs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnIsEnabledChanging(bool value);
    partial void OnIsEnabledChanged();
    partial void OnIsStudentChanging(bool value);
    partial void OnIsStudentChanged();
    partial void OnLastUpdatedChanging(System.DateTime value);
    partial void OnLastUpdatedChanged();
    partial void OnDomainSharingPolicyChanging(string value);
    partial void OnDomainSharingPolicyChanged();
    partial void OnETagChanging(string value);
    partial void OnETagChanged();
    partial void OnIsCurrentAppInstalledChanging(System.Nullable<bool> value);
    partial void OnIsCurrentAppInstalledChanged();
    partial void OnKindChanging(string value);
    partial void OnKindChanged();
    partial void OnLargestChangeIDChanging(string value);
    partial void OnLargestChangeIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPermissionIDChanging(string value);
    partial void OnPermissionIDChanged();
    partial void OnQuotaBytesTotalChanging(string value);
    partial void OnQuotaBytesTotalChanged();
    partial void OnQuotaBytesUsedChanging(string value);
    partial void OnQuotaBytesUsedChanged();
    partial void OnQuotaBytesUsedAggregateChanging(string value);
    partial void OnQuotaBytesUsedAggregateChanged();
    partial void OnQuotaBytesUsedInTrashChanging(string value);
    partial void OnQuotaBytesUsedInTrashChanged();
    partial void OnRootFolderIDChanging(string value);
    partial void OnRootFolderIDChanged();
    #endregion
		
		public tbl_User()
		{
			this._tbl_Docs = new EntitySet<tbl_Doc>(new Action<tbl_Doc>(this.attach_tbl_Docs), new Action<tbl_Doc>(this.detach_tbl_Docs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="VarChar(256) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnabled", DbType="Bit NOT NULL")]
		public bool IsEnabled
		{
			get
			{
				return this._IsEnabled;
			}
			set
			{
				if ((this._IsEnabled != value))
				{
					this.OnIsEnabledChanging(value);
					this.SendPropertyChanging();
					this._IsEnabled = value;
					this.SendPropertyChanged("IsEnabled");
					this.OnIsEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsStudent", DbType="Bit NOT NULL")]
		public bool IsStudent
		{
			get
			{
				return this._IsStudent;
			}
			set
			{
				if ((this._IsStudent != value))
				{
					this.OnIsStudentChanging(value);
					this.SendPropertyChanging();
					this._IsStudent = value;
					this.SendPropertyChanged("IsStudent");
					this.OnIsStudentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DomainSharingPolicy", DbType="VarChar(64)")]
		public string DomainSharingPolicy
		{
			get
			{
				return this._DomainSharingPolicy;
			}
			set
			{
				if ((this._DomainSharingPolicy != value))
				{
					this.OnDomainSharingPolicyChanging(value);
					this.SendPropertyChanging();
					this._DomainSharingPolicy = value;
					this.SendPropertyChanged("DomainSharingPolicy");
					this.OnDomainSharingPolicyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ETag", DbType="VarChar(128)")]
		public string ETag
		{
			get
			{
				return this._ETag;
			}
			set
			{
				if ((this._ETag != value))
				{
					this.OnETagChanging(value);
					this.SendPropertyChanging();
					this._ETag = value;
					this.SendPropertyChanged("ETag");
					this.OnETagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentAppInstalled", DbType="Bit")]
		public System.Nullable<bool> IsCurrentAppInstalled
		{
			get
			{
				return this._IsCurrentAppInstalled;
			}
			set
			{
				if ((this._IsCurrentAppInstalled != value))
				{
					this.OnIsCurrentAppInstalledChanging(value);
					this.SendPropertyChanging();
					this._IsCurrentAppInstalled = value;
					this.SendPropertyChanged("IsCurrentAppInstalled");
					this.OnIsCurrentAppInstalledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Kind", DbType="VarChar(64)")]
		public string Kind
		{
			get
			{
				return this._Kind;
			}
			set
			{
				if ((this._Kind != value))
				{
					this.OnKindChanging(value);
					this.SendPropertyChanging();
					this._Kind = value;
					this.SendPropertyChanged("Kind");
					this.OnKindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LargestChangeID", DbType="VarChar(64)")]
		public string LargestChangeID
		{
			get
			{
				return this._LargestChangeID;
			}
			set
			{
				if ((this._LargestChangeID != value))
				{
					this.OnLargestChangeIDChanging(value);
					this.SendPropertyChanging();
					this._LargestChangeID = value;
					this.SendPropertyChanged("LargestChangeID");
					this.OnLargestChangeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PermissionID", DbType="VarChar(128)")]
		public string PermissionID
		{
			get
			{
				return this._PermissionID;
			}
			set
			{
				if ((this._PermissionID != value))
				{
					this.OnPermissionIDChanging(value);
					this.SendPropertyChanging();
					this._PermissionID = value;
					this.SendPropertyChanged("PermissionID");
					this.OnPermissionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaBytesTotal", DbType="VarChar(128)")]
		public string QuotaBytesTotal
		{
			get
			{
				return this._QuotaBytesTotal;
			}
			set
			{
				if ((this._QuotaBytesTotal != value))
				{
					this.OnQuotaBytesTotalChanging(value);
					this.SendPropertyChanging();
					this._QuotaBytesTotal = value;
					this.SendPropertyChanged("QuotaBytesTotal");
					this.OnQuotaBytesTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaBytesUsed", DbType="VarChar(128)")]
		public string QuotaBytesUsed
		{
			get
			{
				return this._QuotaBytesUsed;
			}
			set
			{
				if ((this._QuotaBytesUsed != value))
				{
					this.OnQuotaBytesUsedChanging(value);
					this.SendPropertyChanging();
					this._QuotaBytesUsed = value;
					this.SendPropertyChanged("QuotaBytesUsed");
					this.OnQuotaBytesUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaBytesUsedAggregate", DbType="VarChar(128)")]
		public string QuotaBytesUsedAggregate
		{
			get
			{
				return this._QuotaBytesUsedAggregate;
			}
			set
			{
				if ((this._QuotaBytesUsedAggregate != value))
				{
					this.OnQuotaBytesUsedAggregateChanging(value);
					this.SendPropertyChanging();
					this._QuotaBytesUsedAggregate = value;
					this.SendPropertyChanged("QuotaBytesUsedAggregate");
					this.OnQuotaBytesUsedAggregateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuotaBytesUsedInTrash", DbType="VarChar(128)")]
		public string QuotaBytesUsedInTrash
		{
			get
			{
				return this._QuotaBytesUsedInTrash;
			}
			set
			{
				if ((this._QuotaBytesUsedInTrash != value))
				{
					this.OnQuotaBytesUsedInTrashChanging(value);
					this.SendPropertyChanging();
					this._QuotaBytesUsedInTrash = value;
					this.SendPropertyChanged("QuotaBytesUsedInTrash");
					this.OnQuotaBytesUsedInTrashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RootFolderID", DbType="VarChar(128)")]
		public string RootFolderID
		{
			get
			{
				return this._RootFolderID;
			}
			set
			{
				if ((this._RootFolderID != value))
				{
					this.OnRootFolderIDChanging(value);
					this.SendPropertyChanging();
					this._RootFolderID = value;
					this.SendPropertyChanged("RootFolderID");
					this.OnRootFolderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_User_tbl_Doc", Storage="_tbl_Docs", ThisKey="UserID", OtherKey="OwnerID")]
		public EntitySet<tbl_Doc> tbl_Docs
		{
			get
			{
				return this._tbl_Docs;
			}
			set
			{
				this._tbl_Docs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Docs(tbl_Doc entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = this;
		}
		
		private void detach_tbl_Docs(tbl_Doc entity)
		{
			this.SendPropertyChanging();
			entity.tbl_User = null;
		}
	}
}
#pragma warning restore 1591
